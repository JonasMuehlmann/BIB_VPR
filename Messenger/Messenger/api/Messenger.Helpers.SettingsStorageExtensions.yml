### YamlMime:ManagedReference
items:
- uid: Messenger.Helpers.SettingsStorageExtensions
  commentId: T:Messenger.Helpers.SettingsStorageExtensions
  id: SettingsStorageExtensions
  parent: Messenger.Helpers
  children:
  - Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable(Windows.Storage.ApplicationData)
  - Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.ApplicationDataContainer,System.String)
  - Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.StorageFolder,System.String)
  - Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync(Windows.Storage.StorageFile)
  - Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync(Windows.Storage.StorageFolder,System.String)
  - Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.ApplicationDataContainer,System.String,``0)
  - Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.StorageFolder,System.String,``0)
  - Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)
  - Messenger.Helpers.SettingsStorageExtensions.SaveString(Windows.Storage.ApplicationDataContainer,System.String,System.String)
  langs:
  - csharp
  - vb
  name: SettingsStorageExtensions
  nameWithType: SettingsStorageExtensions
  fullName: Messenger.Helpers.SettingsStorageExtensions
  type: Class
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SettingsStorageExtensions
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 13
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static class SettingsStorageExtensions
    content.vb: Public Module SettingsStorageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable(Windows.Storage.ApplicationData)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable(Windows.Storage.ApplicationData)
  id: IsRoamingStorageAvailable(Windows.Storage.ApplicationData)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: IsRoamingStorageAvailable(ApplicationData)
  nameWithType: SettingsStorageExtensions.IsRoamingStorageAvailable(ApplicationData)
  fullName: Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable(Windows.Storage.ApplicationData)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: IsRoamingStorageAvailable
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 17
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static bool IsRoamingStorageAvailable(this ApplicationData appData)
    parameters:
    - id: appData
      type: Windows.Storage.ApplicationData
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRoamingStorageAvailable(appData As ApplicationData) As Boolean
  overload: Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.StorageFolder,System.String,``0)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.StorageFolder,System.String,``0)
  id: SaveAsync``1(Windows.Storage.StorageFolder,System.String,``0)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: SaveAsync<T>(StorageFolder, String, T)
  nameWithType: SettingsStorageExtensions.SaveAsync<T>(StorageFolder, String, T)
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveAsync<T>(Windows.Storage.StorageFolder, System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SaveAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 22
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task SaveAsync<T>(this StorageFolder folder, string name, T content)
    parameters:
    - id: folder
      type: Windows.Storage.StorageFolder
    - id: name
      type: System.String
    - id: content
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SaveAsync(Of T)(folder As StorageFolder, name As String, content As T) As Task
  overload: Messenger.Helpers.SettingsStorageExtensions.SaveAsync*
  nameWithType.vb: SettingsStorageExtensions.SaveAsync(Of T)(StorageFolder, String, T)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Messenger.Helpers.SettingsStorageExtensions.SaveAsync(Of T)(Windows.Storage.StorageFolder, System.String, T)
  name.vb: SaveAsync(Of T)(StorageFolder, String, T)
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.StorageFolder,System.String)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.StorageFolder,System.String)
  id: ReadAsync``1(Windows.Storage.StorageFolder,System.String)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<T>(StorageFolder, String)
  nameWithType: SettingsStorageExtensions.ReadAsync<T>(StorageFolder, String)
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadAsync<T>(Windows.Storage.StorageFolder, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ReadAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 30
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task<T> ReadAsync<T>(this StorageFolder folder, string name)
    parameters:
    - id: folder
      type: Windows.Storage.StorageFolder
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadAsync(Of T)(folder As StorageFolder, name As String) As Task(Of T)
  overload: Messenger.Helpers.SettingsStorageExtensions.ReadAsync*
  nameWithType.vb: SettingsStorageExtensions.ReadAsync(Of T)(StorageFolder, String)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Messenger.Helpers.SettingsStorageExtensions.ReadAsync(Of T)(Windows.Storage.StorageFolder, System.String)
  name.vb: ReadAsync(Of T)(StorageFolder, String)
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.ApplicationDataContainer,System.String,``0)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.SaveAsync``1(Windows.Storage.ApplicationDataContainer,System.String,``0)
  id: SaveAsync``1(Windows.Storage.ApplicationDataContainer,System.String,``0)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: SaveAsync<T>(ApplicationDataContainer, String, T)
  nameWithType: SettingsStorageExtensions.SaveAsync<T>(ApplicationDataContainer, String, T)
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveAsync<T>(Windows.Storage.ApplicationDataContainer, System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SaveAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 43
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task SaveAsync<T>(this ApplicationDataContainer settings, string key, T value)
    parameters:
    - id: settings
      type: Windows.Storage.ApplicationDataContainer
    - id: key
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SaveAsync(Of T)(settings As ApplicationDataContainer, key As String, value As T) As Task
  overload: Messenger.Helpers.SettingsStorageExtensions.SaveAsync*
  nameWithType.vb: SettingsStorageExtensions.SaveAsync(Of T)(ApplicationDataContainer, String, T)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Messenger.Helpers.SettingsStorageExtensions.SaveAsync(Of T)(Windows.Storage.ApplicationDataContainer, System.String, T)
  name.vb: SaveAsync(Of T)(ApplicationDataContainer, String, T)
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveString(Windows.Storage.ApplicationDataContainer,System.String,System.String)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.SaveString(Windows.Storage.ApplicationDataContainer,System.String,System.String)
  id: SaveString(Windows.Storage.ApplicationDataContainer,System.String,System.String)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: SaveString(ApplicationDataContainer, String, String)
  nameWithType: SettingsStorageExtensions.SaveString(ApplicationDataContainer, String, String)
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveString(Windows.Storage.ApplicationDataContainer, System.String, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SaveString
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 48
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static void SaveString(this ApplicationDataContainer settings, string key, string value)
    parameters:
    - id: settings
      type: Windows.Storage.ApplicationDataContainer
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveString(settings As ApplicationDataContainer, key As String, value As String)
  overload: Messenger.Helpers.SettingsStorageExtensions.SaveString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.ApplicationDataContainer,System.String)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.ReadAsync``1(Windows.Storage.ApplicationDataContainer,System.String)
  id: ReadAsync``1(Windows.Storage.ApplicationDataContainer,System.String)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<T>(ApplicationDataContainer, String)
  nameWithType: SettingsStorageExtensions.ReadAsync<T>(ApplicationDataContainer, String)
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadAsync<T>(Windows.Storage.ApplicationDataContainer, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ReadAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 53
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task<T> ReadAsync<T>(this ApplicationDataContainer settings, string key)
    parameters:
    - id: settings
      type: Windows.Storage.ApplicationDataContainer
    - id: key
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadAsync(Of T)(settings As ApplicationDataContainer, key As String) As Task(Of T)
  overload: Messenger.Helpers.SettingsStorageExtensions.ReadAsync*
  nameWithType.vb: SettingsStorageExtensions.ReadAsync(Of T)(ApplicationDataContainer, String)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Messenger.Helpers.SettingsStorageExtensions.ReadAsync(Of T)(Windows.Storage.ApplicationDataContainer, System.String)
  name.vb: ReadAsync(Of T)(ApplicationDataContainer, String)
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)
  id: SaveFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: SaveFileAsync(StorageFolder, Byte[], String, CreationCollisionOption)
  nameWithType: SettingsStorageExtensions.SaveFileAsync(StorageFolder, Byte[], String, CreationCollisionOption)
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync(Windows.Storage.StorageFolder, System.Byte[], System.String, Windows.Storage.CreationCollisionOption)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SaveFileAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 65
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task<StorageFile> SaveFileAsync(this StorageFolder folder, byte[] content, string fileName, CreationCollisionOption options = CreationCollisionOption.ReplaceExisting)
    parameters:
    - id: folder
      type: Windows.Storage.StorageFolder
    - id: content
      type: System.Byte[]
    - id: fileName
      type: System.String
    - id: options
      type: Windows.Storage.CreationCollisionOption
    return:
      type: System.Threading.Tasks.Task{Windows.Storage.StorageFile}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SaveFileAsync(folder As StorageFolder, content As Byte(), fileName As String, options As CreationCollisionOption = CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)
  overload: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync*
  nameWithType.vb: SettingsStorageExtensions.SaveFileAsync(StorageFolder, Byte(), String, CreationCollisionOption)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync(Windows.Storage.StorageFolder, System.Byte(), System.String, Windows.Storage.CreationCollisionOption)
  name.vb: SaveFileAsync(StorageFolder, Byte(), String, CreationCollisionOption)
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync(Windows.Storage.StorageFolder,System.String)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync(Windows.Storage.StorageFolder,System.String)
  id: ReadFileAsync(Windows.Storage.StorageFolder,System.String)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: ReadFileAsync(StorageFolder, String)
  nameWithType: SettingsStorageExtensions.ReadFileAsync(StorageFolder, String)
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync(Windows.Storage.StorageFolder, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ReadFileAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 82
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task<byte[]> ReadFileAsync(this StorageFolder folder, string fileName)
    parameters:
    - id: folder
      type: Windows.Storage.StorageFolder
    - id: fileName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadFileAsync(folder As StorageFolder, fileName As String) As Task(Of Byte())
  overload: Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync(Windows.Storage.StorageFile)
  commentId: M:Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync(Windows.Storage.StorageFile)
  id: ReadBytesAsync(Windows.Storage.StorageFile)
  isExtensionMethod: true
  parent: Messenger.Helpers.SettingsStorageExtensions
  langs:
  - csharp
  - vb
  name: ReadBytesAsync(StorageFile)
  nameWithType: SettingsStorageExtensions.ReadBytesAsync(StorageFile)
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync(Windows.Storage.StorageFile)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/SettingsStorageExtensions.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ReadBytesAsync
    path: Helpers/SettingsStorageExtensions.cs
    startLine: 96
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public static async Task<byte[]> ReadBytesAsync(this StorageFile file)
    parameters:
    - id: file
      type: Windows.Storage.StorageFile
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadBytesAsync(file As StorageFile) As Task(Of Byte())
  overload: Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Messenger.Helpers
  commentId: N:Messenger.Helpers
  name: Messenger.Helpers
  nameWithType: Messenger.Helpers
  fullName: Messenger.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable
  name: IsRoamingStorageAvailable
  nameWithType: SettingsStorageExtensions.IsRoamingStorageAvailable
  fullName: Messenger.Helpers.SettingsStorageExtensions.IsRoamingStorageAvailable
- uid: Windows.Storage.ApplicationData
  commentId: T:Windows.Storage.ApplicationData
  parent: Windows.Storage
  isExternal: true
  name: ApplicationData
  nameWithType: ApplicationData
  fullName: Windows.Storage.ApplicationData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.Storage
  commentId: N:Windows.Storage
  isExternal: true
  name: Windows.Storage
  nameWithType: Windows.Storage
  fullName: Windows.Storage
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveAsync*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.SaveAsync
  name: SaveAsync
  nameWithType: SettingsStorageExtensions.SaveAsync
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveAsync
- uid: Windows.Storage.StorageFolder
  commentId: T:Windows.Storage.StorageFolder
  parent: Windows.Storage
  isExternal: true
  name: StorageFolder
  nameWithType: StorageFolder
  fullName: Windows.Storage.StorageFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadAsync*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.ReadAsync
  name: ReadAsync
  nameWithType: SettingsStorageExtensions.ReadAsync
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage.ApplicationDataContainer
  commentId: T:Windows.Storage.ApplicationDataContainer
  parent: Windows.Storage
  isExternal: true
  name: ApplicationDataContainer
  nameWithType: ApplicationDataContainer
  fullName: Windows.Storage.ApplicationDataContainer
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveString*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.SaveString
  name: SaveString
  nameWithType: SettingsStorageExtensions.SaveString
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveString
- uid: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync
  name: SaveFileAsync
  nameWithType: SettingsStorageExtensions.SaveFileAsync
  fullName: Messenger.Helpers.SettingsStorageExtensions.SaveFileAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Windows.Storage.CreationCollisionOption
  commentId: T:Windows.Storage.CreationCollisionOption
  parent: Windows.Storage
  isExternal: true
  name: CreationCollisionOption
  nameWithType: CreationCollisionOption
  fullName: Windows.Storage.CreationCollisionOption
- uid: System.Threading.Tasks.Task{Windows.Storage.StorageFile}
  commentId: T:System.Threading.Tasks.Task{Windows.Storage.StorageFile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<StorageFile>
  nameWithType: Task<StorageFile>
  fullName: System.Threading.Tasks.Task<Windows.Storage.StorageFile>
  nameWithType.vb: Task(Of StorageFile)
  fullName.vb: System.Threading.Tasks.Task(Of Windows.Storage.StorageFile)
  name.vb: Task(Of StorageFile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Windows.Storage.StorageFile
    name: StorageFile
    nameWithType: StorageFile
    fullName: Windows.Storage.StorageFile
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Windows.Storage.StorageFile
    name: StorageFile
    nameWithType: StorageFile
    fullName: Windows.Storage.StorageFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync
  name: ReadFileAsync
  nameWithType: SettingsStorageExtensions.ReadFileAsync
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadFileAsync
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync*
  commentId: Overload:Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync
  name: ReadBytesAsync
  nameWithType: SettingsStorageExtensions.ReadBytesAsync
  fullName: Messenger.Helpers.SettingsStorageExtensions.ReadBytesAsync
- uid: Windows.Storage.StorageFile
  commentId: T:Windows.Storage.StorageFile
  parent: Windows.Storage
  isExternal: true
  name: StorageFile
  nameWithType: StorageFile
  fullName: Windows.Storage.StorageFile
