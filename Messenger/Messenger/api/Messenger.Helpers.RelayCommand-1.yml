### YamlMime:ManagedReference
items:
- uid: Messenger.Helpers.RelayCommand`1
  commentId: T:Messenger.Helpers.RelayCommand`1
  id: RelayCommand`1
  parent: Messenger.Helpers
  children:
  - Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0})
  - Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})
  - Messenger.Helpers.RelayCommand`1.CanExecute(System.Object)
  - Messenger.Helpers.RelayCommand`1.CanExecuteChanged
  - Messenger.Helpers.RelayCommand`1.Execute(System.Object)
  - Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged
  langs:
  - csharp
  - vb
  name: RelayCommand<T>
  nameWithType: RelayCommand<T>
  fullName: Messenger.Helpers.RelayCommand<T>
  type: Class
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: RelayCommand
    path: Helpers/RelayCommand.cs
    startLine: 31
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: 'public class RelayCommand<T> : ICommand'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class RelayCommand(Of T)
          Implements ICommand
  inheritance:
  - System.Object
  implements:
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RelayCommand(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Messenger.Helpers.RelayCommand(Of T)
  name.vb: RelayCommand(Of T)
- uid: Messenger.Helpers.RelayCommand`1.CanExecuteChanged
  commentId: E:Messenger.Helpers.RelayCommand`1.CanExecuteChanged
  id: CanExecuteChanged
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: RelayCommand<T>.CanExecuteChanged
  fullName: Messenger.Helpers.RelayCommand<T>.CanExecuteChanged
  type: Event
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CanExecuteChanged
    path: Helpers/RelayCommand.cs
    startLine: 37
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
  nameWithType.vb: RelayCommand(Of T).CanExecuteChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).CanExecuteChanged
- uid: Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0})
  commentId: M:Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0})
  id: '#ctor(System.Action{`0})'
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<T>)
  nameWithType: RelayCommand<T>.RelayCommand(Action<T>)
  fullName: Messenger.Helpers.RelayCommand<T>.RelayCommand(System.Action<T>)
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Helpers/RelayCommand.cs
    startLine: 39
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public RelayCommand(Action<T> execute)
    parameters:
    - id: execute
      type: System.Action{{T}}
    content.vb: Public Sub New(execute As Action(Of T))
  overload: Messenger.Helpers.RelayCommand`1.#ctor*
  nameWithType.vb: RelayCommand(Of T).RelayCommand(Action(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).RelayCommand(System.Action(Of T))
  name.vb: RelayCommand(Action(Of T))
- uid: Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})
  commentId: M:Messenger.Helpers.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})
  id: '#ctor(System.Action{`0},System.Func{`0,System.Boolean})'
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<T>, Func<T, Boolean>)
  nameWithType: RelayCommand<T>.RelayCommand(Action<T>, Func<T, Boolean>)
  fullName: Messenger.Helpers.RelayCommand<T>.RelayCommand(System.Action<T>, System.Func<T, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Helpers/RelayCommand.cs
    startLine: 44
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public RelayCommand(Action<T> execute, Func<T, bool> canExecute)
    parameters:
    - id: execute
      type: System.Action{{T}}
    - id: canExecute
      type: System.Func{{T},System.Boolean}
    content.vb: Public Sub New(execute As Action(Of T), canExecute As Func(Of T, Boolean))
  overload: Messenger.Helpers.RelayCommand`1.#ctor*
  nameWithType.vb: RelayCommand(Of T).RelayCommand(Action(Of T), Func(Of T, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).RelayCommand(System.Action(Of T), System.Func(Of T, System.Boolean))
  name.vb: RelayCommand(Action(Of T), Func(Of T, Boolean))
- uid: Messenger.Helpers.RelayCommand`1.CanExecute(System.Object)
  commentId: M:Messenger.Helpers.RelayCommand`1.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: CanExecute(Object)
  nameWithType: RelayCommand<T>.CanExecute(Object)
  fullName: Messenger.Helpers.RelayCommand<T>.CanExecute(System.Object)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CanExecute
    path: Helpers/RelayCommand.cs
    startLine: 50
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public bool CanExecute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: Messenger.Helpers.RelayCommand`1.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType.vb: RelayCommand(Of T).CanExecute(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).CanExecute(System.Object)
- uid: Messenger.Helpers.RelayCommand`1.Execute(System.Object)
  commentId: M:Messenger.Helpers.RelayCommand`1.Execute(System.Object)
  id: Execute(System.Object)
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: Execute(Object)
  nameWithType: RelayCommand<T>.Execute(Object)
  fullName: Messenger.Helpers.RelayCommand<T>.Execute(System.Object)
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Execute
    path: Helpers/RelayCommand.cs
    startLine: 52
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public void Execute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    content.vb: Public Sub Execute(parameter As Object)
  overload: Messenger.Helpers.RelayCommand`1.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType.vb: RelayCommand(Of T).Execute(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).Execute(System.Object)
- uid: Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged
  commentId: M:Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged
  id: OnCanExecuteChanged
  parent: Messenger.Helpers.RelayCommand`1
  langs:
  - csharp
  - vb
  name: OnCanExecuteChanged()
  nameWithType: RelayCommand<T>.OnCanExecuteChanged()
  fullName: Messenger.Helpers.RelayCommand<T>.OnCanExecuteChanged()
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Helpers/RelayCommand.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: OnCanExecuteChanged
    path: Helpers/RelayCommand.cs
    startLine: 54
  assemblies:
  - Messenger
  namespace: Messenger.Helpers
  syntax:
    content: public void OnCanExecuteChanged()
    content.vb: Public Sub OnCanExecuteChanged
  overload: Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged*
  nameWithType.vb: RelayCommand(Of T).OnCanExecuteChanged()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).OnCanExecuteChanged()
references:
- uid: Messenger.Helpers
  commentId: N:Messenger.Helpers
  name: Messenger.Helpers
  nameWithType: Messenger.Helpers
  fullName: Messenger.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Messenger.Helpers.RelayCommand`1.#ctor*
  commentId: Overload:Messenger.Helpers.RelayCommand`1.#ctor
  name: RelayCommand
  nameWithType: RelayCommand<T>.RelayCommand
  fullName: Messenger.Helpers.RelayCommand<T>.RelayCommand
  nameWithType.vb: RelayCommand(Of T).RelayCommand
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).RelayCommand
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{`0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<T, Boolean>
  nameWithType: Func<T, Boolean>
  fullName: System.Func<T, System.Boolean>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, System.Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Helpers.RelayCommand`1.CanExecute*
  commentId: Overload:Messenger.Helpers.RelayCommand`1.CanExecute
  name: CanExecute
  nameWithType: RelayCommand<T>.CanExecute
  fullName: Messenger.Helpers.RelayCommand<T>.CanExecute
  nameWithType.vb: RelayCommand(Of T).CanExecute
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).CanExecute
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    nameWithType: ICommand.CanExecute
    fullName: System.Windows.Input.ICommand.CanExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    nameWithType: ICommand.CanExecute
    fullName: System.Windows.Input.ICommand.CanExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Messenger.Helpers.RelayCommand`1.Execute*
  commentId: Overload:Messenger.Helpers.RelayCommand`1.Execute
  name: Execute
  nameWithType: RelayCommand<T>.Execute
  fullName: Messenger.Helpers.RelayCommand<T>.Execute
  nameWithType.vb: RelayCommand(Of T).Execute
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(System.Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    nameWithType: ICommand.Execute
    fullName: System.Windows.Input.ICommand.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    nameWithType: ICommand.Execute
    fullName: System.Windows.Input.ICommand.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged*
  commentId: Overload:Messenger.Helpers.RelayCommand`1.OnCanExecuteChanged
  name: OnCanExecuteChanged
  nameWithType: RelayCommand<T>.OnCanExecuteChanged
  fullName: Messenger.Helpers.RelayCommand<T>.OnCanExecuteChanged
  nameWithType.vb: RelayCommand(Of T).OnCanExecuteChanged
  fullName.vb: Messenger.Helpers.RelayCommand(Of T).OnCanExecuteChanged
