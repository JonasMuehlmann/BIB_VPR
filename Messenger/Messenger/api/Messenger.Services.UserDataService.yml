### YamlMime:ManagedReference
items:
- uid: Messenger.Services.UserDataService
  commentId: T:Messenger.Services.UserDataService
  id: UserDataService
  parent: Messenger.Services
  children:
  - Messenger.Services.UserDataService.#ctor
  - Messenger.Services.UserDataService.GetUserAsync
  - Messenger.Services.UserDataService.Initialize
  - Messenger.Services.UserDataService.UserDataUpdated
  langs:
  - csharp
  - vb
  name: UserDataService
  nameWithType: UserDataService
  fullName: Messenger.Services.UserDataService
  type: Class
  source:
    remote:
      path: Messenger/Messenger/Services/UserDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: UserDataService
    path: Services/UserDataService.cs
    startLine: 14
  assemblies:
  - Messenger
  namespace: Messenger.Services
  syntax:
    content: public class UserDataService
    content.vb: Public Class UserDataService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Services.UserDataService.UserDataUpdated
  commentId: E:Messenger.Services.UserDataService.UserDataUpdated
  id: UserDataUpdated
  parent: Messenger.Services.UserDataService
  langs:
  - csharp
  - vb
  name: UserDataUpdated
  nameWithType: UserDataService.UserDataUpdated
  fullName: Messenger.Services.UserDataService.UserDataUpdated
  type: Event
  source:
    remote:
      path: Messenger/Messenger/Services/UserDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: UserDataUpdated
    path: Services/UserDataService.cs
    startLine: 28
  assemblies:
  - Messenger
  namespace: Messenger.Services
  syntax:
    content: public event EventHandler<UserViewModel> UserDataUpdated
    return:
      type: System.EventHandler{Messenger.ViewModels.UserViewModel}
    content.vb: Public Event UserDataUpdated As EventHandler(Of UserViewModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Services.UserDataService.#ctor
  commentId: M:Messenger.Services.UserDataService.#ctor
  id: '#ctor'
  parent: Messenger.Services.UserDataService
  langs:
  - csharp
  - vb
  name: UserDataService()
  nameWithType: UserDataService.UserDataService()
  fullName: Messenger.Services.UserDataService.UserDataService()
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger/Services/UserDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Services/UserDataService.cs
    startLine: 30
  assemblies:
  - Messenger
  namespace: Messenger.Services
  syntax:
    content: public UserDataService()
    content.vb: Public Sub New
  overload: Messenger.Services.UserDataService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Services.UserDataService.Initialize
  commentId: M:Messenger.Services.UserDataService.Initialize
  id: Initialize
  parent: Messenger.Services.UserDataService
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: UserDataService.Initialize()
  fullName: Messenger.Services.UserDataService.Initialize()
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Services/UserDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Initialize
    path: Services/UserDataService.cs
    startLine: 34
  assemblies:
  - Messenger
  namespace: Messenger.Services
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: Messenger.Services.UserDataService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Services.UserDataService.GetUserAsync
  commentId: M:Messenger.Services.UserDataService.GetUserAsync
  id: GetUserAsync
  parent: Messenger.Services.UserDataService
  langs:
  - csharp
  - vb
  name: GetUserAsync()
  nameWithType: UserDataService.GetUserAsync()
  fullName: Messenger.Services.UserDataService.GetUserAsync()
  type: Method
  source:
    remote:
      path: Messenger/Messenger/Services/UserDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetUserAsync
    path: Services/UserDataService.cs
    startLine: 40
  assemblies:
  - Messenger
  namespace: Messenger.Services
  syntax:
    content: public async Task<UserViewModel> GetUserAsync()
    return:
      type: System.Threading.Tasks.Task{Messenger.ViewModels.UserViewModel}
    content.vb: Public Function GetUserAsync As Task(Of UserViewModel)
  overload: Messenger.Services.UserDataService.GetUserAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Services
  commentId: N:Messenger.Services
  name: Messenger.Services
  nameWithType: Messenger.Services
  fullName: Messenger.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Messenger.ViewModels.UserViewModel}
  commentId: T:System.EventHandler{Messenger.ViewModels.UserViewModel}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UserViewModel>
  nameWithType: EventHandler<UserViewModel>
  fullName: System.EventHandler<Messenger.ViewModels.UserViewModel>
  nameWithType.vb: EventHandler(Of UserViewModel)
  fullName.vb: System.EventHandler(Of Messenger.ViewModels.UserViewModel)
  name.vb: EventHandler(Of UserViewModel)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.ViewModels.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Messenger.ViewModels.UserViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.ViewModels.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Messenger.ViewModels.UserViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Services.UserDataService.#ctor*
  commentId: Overload:Messenger.Services.UserDataService.#ctor
  name: UserDataService
  nameWithType: UserDataService.UserDataService
  fullName: Messenger.Services.UserDataService.UserDataService
- uid: Messenger.Services.UserDataService.Initialize*
  commentId: Overload:Messenger.Services.UserDataService.Initialize
  name: Initialize
  nameWithType: UserDataService.Initialize
  fullName: Messenger.Services.UserDataService.Initialize
- uid: Messenger.Services.UserDataService.GetUserAsync*
  commentId: Overload:Messenger.Services.UserDataService.GetUserAsync
  name: GetUserAsync
  nameWithType: UserDataService.GetUserAsync
  fullName: Messenger.Services.UserDataService.GetUserAsync
- uid: System.Threading.Tasks.Task{Messenger.ViewModels.UserViewModel}
  commentId: T:System.Threading.Tasks.Task{Messenger.ViewModels.UserViewModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UserViewModel>
  nameWithType: Task<UserViewModel>
  fullName: System.Threading.Tasks.Task<Messenger.ViewModels.UserViewModel>
  nameWithType.vb: Task(Of UserViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of Messenger.ViewModels.UserViewModel)
  name.vb: Task(Of UserViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.ViewModels.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Messenger.ViewModels.UserViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.ViewModels.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Messenger.ViewModels.UserViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
