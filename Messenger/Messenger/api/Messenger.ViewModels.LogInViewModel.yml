### YamlMime:ManagedReference
items:
- uid: Messenger.ViewModels.LogInViewModel
  commentId: T:Messenger.ViewModels.LogInViewModel
  id: LogInViewModel
  parent: Messenger.ViewModels
  children:
  - Messenger.ViewModels.LogInViewModel.#ctor
  - Messenger.ViewModels.LogInViewModel.IsBusy
  - Messenger.ViewModels.LogInViewModel.LoginCommand
  - Messenger.ViewModels.LogInViewModel.StatusMessage
  langs:
  - csharp
  - vb
  name: LogInViewModel
  nameWithType: LogInViewModel
  fullName: Messenger.ViewModels.LogInViewModel
  type: Class
  source:
    remote:
      path: Messenger/Messenger/ViewModels/LogInViewModel.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LogInViewModel
    path: ViewModels/LogInViewModel.cs
    startLine: 8
  assemblies:
  - Messenger
  namespace: Messenger.ViewModels
  syntax:
    content: 'public class LogInViewModel : Observable, INotifyPropertyChanged'
    content.vb: >-
      Public Class LogInViewModel
          Inherits Observable
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - Messenger.Helpers.Observable
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - Messenger.Helpers.Observable.PropertyChanged
  - Messenger.Helpers.Observable.Set``1({T}@,{T},System.String)
  - Messenger.Helpers.Observable.OnPropertyChanged(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.ViewModels.LogInViewModel.StatusMessage
  commentId: P:Messenger.ViewModels.LogInViewModel.StatusMessage
  id: StatusMessage
  parent: Messenger.ViewModels.LogInViewModel
  langs:
  - csharp
  - vb
  name: StatusMessage
  nameWithType: LogInViewModel.StatusMessage
  fullName: Messenger.ViewModels.LogInViewModel.StatusMessage
  type: Property
  source:
    remote:
      path: Messenger/Messenger/ViewModels/LogInViewModel.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: StatusMessage
    path: ViewModels/LogInViewModel.cs
    startLine: 16
  assemblies:
  - Messenger
  namespace: Messenger.ViewModels
  syntax:
    content: public string StatusMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatusMessage As String
  overload: Messenger.ViewModels.LogInViewModel.StatusMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.ViewModels.LogInViewModel.IsBusy
  commentId: P:Messenger.ViewModels.LogInViewModel.IsBusy
  id: IsBusy
  parent: Messenger.ViewModels.LogInViewModel
  langs:
  - csharp
  - vb
  name: IsBusy
  nameWithType: LogInViewModel.IsBusy
  fullName: Messenger.ViewModels.LogInViewModel.IsBusy
  type: Property
  source:
    remote:
      path: Messenger/Messenger/ViewModels/LogInViewModel.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: IsBusy
    path: ViewModels/LogInViewModel.cs
    startLine: 22
  assemblies:
  - Messenger
  namespace: Messenger.ViewModels
  syntax:
    content: public bool IsBusy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBusy As Boolean
  overload: Messenger.ViewModels.LogInViewModel.IsBusy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.ViewModels.LogInViewModel.LoginCommand
  commentId: P:Messenger.ViewModels.LogInViewModel.LoginCommand
  id: LoginCommand
  parent: Messenger.ViewModels.LogInViewModel
  langs:
  - csharp
  - vb
  name: LoginCommand
  nameWithType: LogInViewModel.LoginCommand
  fullName: Messenger.ViewModels.LogInViewModel.LoginCommand
  type: Property
  source:
    remote:
      path: Messenger/Messenger/ViewModels/LogInViewModel.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LoginCommand
    path: ViewModels/LogInViewModel.cs
    startLine: 32
  assemblies:
  - Messenger
  namespace: Messenger.ViewModels
  syntax:
    content: public RelayCommand LoginCommand { get; }
    parameters: []
    return:
      type: Messenger.Helpers.RelayCommand
    content.vb: Public ReadOnly Property LoginCommand As RelayCommand
  overload: Messenger.ViewModels.LogInViewModel.LoginCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Messenger.ViewModels.LogInViewModel.#ctor
  commentId: M:Messenger.ViewModels.LogInViewModel.#ctor
  id: '#ctor'
  parent: Messenger.ViewModels.LogInViewModel
  langs:
  - csharp
  - vb
  name: LogInViewModel()
  nameWithType: LogInViewModel.LogInViewModel()
  fullName: Messenger.ViewModels.LogInViewModel.LogInViewModel()
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger/ViewModels/LogInViewModel.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: ViewModels/LogInViewModel.cs
    startLine: 34
  assemblies:
  - Messenger
  namespace: Messenger.ViewModels
  syntax:
    content: public LogInViewModel()
    content.vb: Public Sub New
  overload: Messenger.ViewModels.LogInViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Messenger.ViewModels
  commentId: N:Messenger.ViewModels
  name: Messenger.ViewModels
  nameWithType: Messenger.ViewModels
  fullName: Messenger.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Messenger.Helpers.Observable
  commentId: T:Messenger.Helpers.Observable
  parent: Messenger.Helpers
  name: Observable
  nameWithType: Observable
  fullName: Messenger.Helpers.Observable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Messenger.Helpers.Observable.PropertyChanged
  commentId: E:Messenger.Helpers.Observable.PropertyChanged
  parent: Messenger.Helpers.Observable
  name: PropertyChanged
  nameWithType: Observable.PropertyChanged
  fullName: Messenger.Helpers.Observable.PropertyChanged
- uid: Messenger.Helpers.Observable.Set``1({T}@,{T},System.String)
  commentId: M:Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
  parent: Messenger.Helpers.Observable
  definition: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
  name: Set<T>(T, T, String)
  nameWithType: Observable.Set<T>(T, T, String)
  fullName: Messenger.Helpers.Observable.Set<T>(T, T, System.String)
  nameWithType.vb: Observable.Set(Of T)(T, T, String)
  fullName.vb: Messenger.Helpers.Observable.Set(Of T)(T, T, System.String)
  name.vb: Set(Of T)(T, T, String)
  spec.csharp:
  - uid: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
    name: Set<T>
    nameWithType: Observable.Set<T>
    fullName: Messenger.Helpers.Observable.Set<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
    name: Set(Of T)
    nameWithType: Observable.Set(Of T)
    fullName: Messenger.Helpers.Observable.Set(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Helpers.Observable.OnPropertyChanged(System.String)
  commentId: M:Messenger.Helpers.Observable.OnPropertyChanged(System.String)
  parent: Messenger.Helpers.Observable
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: Observable.OnPropertyChanged(String)
  fullName: Messenger.Helpers.Observable.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: Messenger.Helpers.Observable.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: Observable.OnPropertyChanged
    fullName: Messenger.Helpers.Observable.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Helpers.Observable.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: Observable.OnPropertyChanged
    fullName: Messenger.Helpers.Observable.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Helpers
  commentId: N:Messenger.Helpers
  name: Messenger.Helpers
  nameWithType: Messenger.Helpers
  fullName: Messenger.Helpers
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
  commentId: M:Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
  isExternal: true
  name: Set<T>(T, T, String)
  nameWithType: Observable.Set<T>(T, T, String)
  fullName: Messenger.Helpers.Observable.Set<T>(T, T, System.String)
  nameWithType.vb: Observable.Set(Of T)(T, T, String)
  fullName.vb: Messenger.Helpers.Observable.Set(Of T)(T, T, System.String)
  name.vb: Set(Of T)(T, T, String)
  spec.csharp:
  - uid: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
    name: Set<T>
    nameWithType: Observable.Set<T>
    fullName: Messenger.Helpers.Observable.Set<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Helpers.Observable.Set``1(``0@,``0,System.String)
    name: Set(Of T)
    nameWithType: Observable.Set(Of T)
    fullName: Messenger.Helpers.Observable.Set(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.ViewModels.LogInViewModel.StatusMessage*
  commentId: Overload:Messenger.ViewModels.LogInViewModel.StatusMessage
  name: StatusMessage
  nameWithType: LogInViewModel.StatusMessage
  fullName: Messenger.ViewModels.LogInViewModel.StatusMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Messenger.ViewModels.LogInViewModel.IsBusy*
  commentId: Overload:Messenger.ViewModels.LogInViewModel.IsBusy
  name: IsBusy
  nameWithType: LogInViewModel.IsBusy
  fullName: Messenger.ViewModels.LogInViewModel.IsBusy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Messenger.ViewModels.LogInViewModel.LoginCommand*
  commentId: Overload:Messenger.ViewModels.LogInViewModel.LoginCommand
  name: LoginCommand
  nameWithType: LogInViewModel.LoginCommand
  fullName: Messenger.ViewModels.LogInViewModel.LoginCommand
- uid: Messenger.Helpers.RelayCommand
  commentId: T:Messenger.Helpers.RelayCommand
  parent: Messenger.Helpers
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: Messenger.Helpers.RelayCommand
- uid: Messenger.ViewModels.LogInViewModel.#ctor*
  commentId: Overload:Messenger.ViewModels.LogInViewModel.#ctor
  name: LogInViewModel
  nameWithType: LogInViewModel.LogInViewModel
  fullName: Messenger.ViewModels.LogInViewModel.LogInViewModel
