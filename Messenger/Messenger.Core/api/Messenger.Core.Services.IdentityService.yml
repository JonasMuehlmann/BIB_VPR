### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.IdentityService
  commentId: T:Messenger.Core.Services.IdentityService
  id: IdentityService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync
  - Messenger.Core.Services.IdentityService.GetAccessTokenAsync(System.String[])
  - Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync
  - Messenger.Core.Services.IdentityService.GetAccountUserName
  - Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts
  - Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs(System.Boolean)
  - Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg(System.String,System.Boolean)
  - Messenger.Core.Services.IdentityService.IsAuthorized
  - Messenger.Core.Services.IdentityService.IsLoggedIn
  - Messenger.Core.Services.IdentityService.LoggedIn
  - Messenger.Core.Services.IdentityService.LoggedOut
  - Messenger.Core.Services.IdentityService.LoginAsync
  - Messenger.Core.Services.IdentityService.LogoutAsync
  langs:
  - csharp
  - vb
  name: IdentityService
  nameWithType: IdentityService
  fullName: Messenger.Core.Services.IdentityService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: IdentityService
    path: Services/IdentityService.cs
    startLine: 12
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public class IdentityService
    content.vb: Public Class IdentityService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.IdentityService.LoggedIn
  commentId: E:Messenger.Core.Services.IdentityService.LoggedIn
  id: LoggedIn
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: LoggedIn
  nameWithType: IdentityService.LoggedIn
  fullName: Messenger.Core.Services.IdentityService.LoggedIn
  type: Event
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LoggedIn
    path: Services/IdentityService.cs
    startLine: 33
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public event EventHandler LoggedIn
    return:
      type: System.EventHandler
    content.vb: Public Event LoggedIn As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.LoggedOut
  commentId: E:Messenger.Core.Services.IdentityService.LoggedOut
  id: LoggedOut
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: LoggedOut
  nameWithType: IdentityService.LoggedOut
  fullName: Messenger.Core.Services.IdentityService.LoggedOut
  type: Event
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LoggedOut
    path: Services/IdentityService.cs
    startLine: 35
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public event EventHandler LoggedOut
    return:
      type: System.EventHandler
    content.vb: Public Event LoggedOut As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts
  commentId: M:Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts
  id: InitializeWithAadAndPersonalMsAccounts
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: InitializeWithAadAndPersonalMsAccounts()
  nameWithType: IdentityService.InitializeWithAadAndPersonalMsAccounts()
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: InitializeWithAadAndPersonalMsAccounts
    path: Services/IdentityService.cs
    startLine: 37
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public void InitializeWithAadAndPersonalMsAccounts()
    content.vb: Public Sub InitializeWithAadAndPersonalMsAccounts
  overload: Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs(System.Boolean)
  commentId: M:Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs(System.Boolean)
  id: InitializeWithAadMultipleOrgs(System.Boolean)
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: InitializeWithAadMultipleOrgs(Boolean)
  nameWithType: IdentityService.InitializeWithAadMultipleOrgs(Boolean)
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs(System.Boolean)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: InitializeWithAadMultipleOrgs
    path: Services/IdentityService.cs
    startLine: 46
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public void InitializeWithAadMultipleOrgs(bool integratedAuth = false)
    parameters:
    - id: integratedAuth
      type: System.Boolean
    content.vb: Public Sub InitializeWithAadMultipleOrgs(integratedAuth As Boolean = False)
  overload: Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg(System.String,System.Boolean)
  commentId: M:Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg(System.String,System.Boolean)
  id: InitializeWithAadSingleOrg(System.String,System.Boolean)
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: InitializeWithAadSingleOrg(String, Boolean)
  nameWithType: IdentityService.InitializeWithAadSingleOrg(String, Boolean)
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: InitializeWithAadSingleOrg
    path: Services/IdentityService.cs
    startLine: 54
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public void InitializeWithAadSingleOrg(string tenant, bool integratedAuth = false)
    parameters:
    - id: tenant
      type: System.String
    - id: integratedAuth
      type: System.Boolean
    content.vb: Public Sub InitializeWithAadSingleOrg(tenant As String, integratedAuth As Boolean = False)
  overload: Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.IsLoggedIn
  commentId: M:Messenger.Core.Services.IdentityService.IsLoggedIn
  id: IsLoggedIn
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: IsLoggedIn()
  nameWithType: IdentityService.IsLoggedIn()
  fullName: Messenger.Core.Services.IdentityService.IsLoggedIn()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: IsLoggedIn
    path: Services/IdentityService.cs
    startLine: 62
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public bool IsLoggedIn()
    return:
      type: System.Boolean
    content.vb: Public Function IsLoggedIn As Boolean
  overload: Messenger.Core.Services.IdentityService.IsLoggedIn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.LoginAsync
  commentId: M:Messenger.Core.Services.IdentityService.LoginAsync
  id: LoginAsync
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: IdentityService.LoginAsync()
  fullName: Messenger.Core.Services.IdentityService.LoginAsync()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LoginAsync
    path: Services/IdentityService.cs
    startLine: 64
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<LoginResultType> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{Messenger.Core.Helpers.LoginResultType}
    content.vb: Public Function LoginAsync As Task(Of LoginResultType)
  overload: Messenger.Core.Services.IdentityService.LoginAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.IsAuthorized
  commentId: M:Messenger.Core.Services.IdentityService.IsAuthorized
  id: IsAuthorized
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: IsAuthorized()
  nameWithType: IdentityService.IsAuthorized()
  fullName: Messenger.Core.Services.IdentityService.IsAuthorized()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: IsAuthorized
    path: Services/IdentityService.cs
    startLine: 101
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public bool IsAuthorized()
    return:
      type: System.Boolean
    content.vb: Public Function IsAuthorized As Boolean
  overload: Messenger.Core.Services.IdentityService.IsAuthorized*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.GetAccountUserName
  commentId: M:Messenger.Core.Services.IdentityService.GetAccountUserName
  id: GetAccountUserName
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: GetAccountUserName()
  nameWithType: IdentityService.GetAccountUserName()
  fullName: Messenger.Core.Services.IdentityService.GetAccountUserName()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAccountUserName
    path: Services/IdentityService.cs
    startLine: 108
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public string GetAccountUserName()
    return:
      type: System.String
    content.vb: Public Function GetAccountUserName As String
  overload: Messenger.Core.Services.IdentityService.GetAccountUserName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.LogoutAsync
  commentId: M:Messenger.Core.Services.IdentityService.LogoutAsync
  id: LogoutAsync
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: LogoutAsync()
  nameWithType: IdentityService.LogoutAsync()
  fullName: Messenger.Core.Services.IdentityService.LogoutAsync()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: LogoutAsync
    path: Services/IdentityService.cs
    startLine: 113
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task LogoutAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function LogoutAsync As Task
  overload: Messenger.Core.Services.IdentityService.LogoutAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync
  commentId: M:Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync
  id: GetAccessTokenForGraphAsync
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: GetAccessTokenForGraphAsync()
  nameWithType: IdentityService.GetAccessTokenForGraphAsync()
  fullName: Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAccessTokenForGraphAsync
    path: Services/IdentityService.cs
    startLine: 135
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<string> GetAccessTokenForGraphAsync()
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetAccessTokenForGraphAsync As Task(Of String)
  overload: Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.IdentityService.GetAccessTokenAsync(System.String[])
  commentId: M:Messenger.Core.Services.IdentityService.GetAccessTokenAsync(System.String[])
  id: GetAccessTokenAsync(System.String[])
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(String[])
  nameWithType: IdentityService.GetAccessTokenAsync(String[])
  fullName: Messenger.Core.Services.IdentityService.GetAccessTokenAsync(System.String[])
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAccessTokenAsync
    path: Services/IdentityService.cs
    startLine: 137
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<string> GetAccessTokenAsync(string[] scopes)
    parameters:
    - id: scopes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetAccessTokenAsync(scopes As String()) As Task(Of String)
  overload: Messenger.Core.Services.IdentityService.GetAccessTokenAsync*
  nameWithType.vb: IdentityService.GetAccessTokenAsync(String())
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.IdentityService.GetAccessTokenAsync(System.String())
  name.vb: GetAccessTokenAsync(String())
- uid: Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync
  commentId: M:Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync
  id: AcquireTokenSilentAsync
  parent: Messenger.Core.Services.IdentityService
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync()
  nameWithType: IdentityService.AcquireTokenSilentAsync()
  fullName: Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/IdentityService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: AcquireTokenSilentAsync
    path: Services/IdentityService.cs
    startLine: 165
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> AcquireTokenSilentAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function AcquireTokenSilentAsync As Task(Of Boolean)
  overload: Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts*
  commentId: Overload:Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts
  name: InitializeWithAadAndPersonalMsAccounts
  nameWithType: IdentityService.InitializeWithAadAndPersonalMsAccounts
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadAndPersonalMsAccounts
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs*
  commentId: Overload:Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs
  name: InitializeWithAadMultipleOrgs
  nameWithType: IdentityService.InitializeWithAadMultipleOrgs
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadMultipleOrgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg*
  commentId: Overload:Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg
  name: InitializeWithAadSingleOrg
  nameWithType: IdentityService.InitializeWithAadSingleOrg
  fullName: Messenger.Core.Services.IdentityService.InitializeWithAadSingleOrg
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Messenger.Core.Services.IdentityService.IsLoggedIn*
  commentId: Overload:Messenger.Core.Services.IdentityService.IsLoggedIn
  name: IsLoggedIn
  nameWithType: IdentityService.IsLoggedIn
  fullName: Messenger.Core.Services.IdentityService.IsLoggedIn
- uid: Messenger.Core.Services.IdentityService.LoginAsync*
  commentId: Overload:Messenger.Core.Services.IdentityService.LoginAsync
  name: LoginAsync
  nameWithType: IdentityService.LoginAsync
  fullName: Messenger.Core.Services.IdentityService.LoginAsync
- uid: System.Threading.Tasks.Task{Messenger.Core.Helpers.LoginResultType}
  commentId: T:System.Threading.Tasks.Task{Messenger.Core.Helpers.LoginResultType}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LoginResultType>
  nameWithType: Task<LoginResultType>
  fullName: System.Threading.Tasks.Task<Messenger.Core.Helpers.LoginResultType>
  nameWithType.vb: Task(Of LoginResultType)
  fullName.vb: System.Threading.Tasks.Task(Of Messenger.Core.Helpers.LoginResultType)
  name.vb: Task(Of LoginResultType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Helpers.LoginResultType
    name: LoginResultType
    nameWithType: LoginResultType
    fullName: Messenger.Core.Helpers.LoginResultType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Helpers.LoginResultType
    name: LoginResultType
    nameWithType: LoginResultType
    fullName: Messenger.Core.Helpers.LoginResultType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.IdentityService.IsAuthorized*
  commentId: Overload:Messenger.Core.Services.IdentityService.IsAuthorized
  name: IsAuthorized
  nameWithType: IdentityService.IsAuthorized
  fullName: Messenger.Core.Services.IdentityService.IsAuthorized
- uid: Messenger.Core.Services.IdentityService.GetAccountUserName*
  commentId: Overload:Messenger.Core.Services.IdentityService.GetAccountUserName
  name: GetAccountUserName
  nameWithType: IdentityService.GetAccountUserName
  fullName: Messenger.Core.Services.IdentityService.GetAccountUserName
- uid: Messenger.Core.Services.IdentityService.LogoutAsync*
  commentId: Overload:Messenger.Core.Services.IdentityService.LogoutAsync
  name: LogoutAsync
  nameWithType: IdentityService.LogoutAsync
  fullName: Messenger.Core.Services.IdentityService.LogoutAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync*
  commentId: Overload:Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync
  name: GetAccessTokenForGraphAsync
  nameWithType: IdentityService.GetAccessTokenForGraphAsync
  fullName: Messenger.Core.Services.IdentityService.GetAccessTokenForGraphAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.IdentityService.GetAccessTokenAsync*
  commentId: Overload:Messenger.Core.Services.IdentityService.GetAccessTokenAsync
  name: GetAccessTokenAsync
  nameWithType: IdentityService.GetAccessTokenAsync
  fullName: Messenger.Core.Services.IdentityService.GetAccessTokenAsync
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync*
  commentId: Overload:Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync
  name: AcquireTokenSilentAsync
  nameWithType: IdentityService.AcquireTokenSilentAsync
  fullName: Messenger.Core.Services.IdentityService.AcquireTokenSilentAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
