### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.AzureTestDataService
  commentId: T:Messenger.Core.Services.AzureTestDataService
  id: AzureTestDataService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.AzureTestDataService.CreateTeam(System.String,System.String)
  - Messenger.Core.Services.AzureTestDataService.DeleteTeam(System.Int32)
  - Messenger.Core.Services.AzureTestDataService.GetAllTeams
  - Messenger.Core.Services.AzureTestDataService.UpdateTeam(Messenger.Core.Services.SampleTeam)
  langs:
  - csharp
  - vb
  name: AzureTestDataService
  nameWithType: AzureTestDataService
  fullName: Messenger.Core.Services.AzureTestDataService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: AzureTestDataService
    path: Services/AzureTestDataService.cs
    startLine: 24
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nSample service of CRUD operations(Team)\n"
  example: []
  syntax:
    content: 'public class AzureTestDataService : AzureServiceBase'
    content.vb: >-
      Public Class AzureTestDataService
          Inherits AzureServiceBase
  inheritance:
  - System.Object
  - Messenger.Core.Services.AzureServiceBase
  inheritedMembers:
  - Messenger.Core.Services.AzureServiceBase.logger
  - Messenger.Core.Services.AzureServiceBase.GetConnection
  - Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  - Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.AzureTestDataService.CreateTeam(System.String,System.String)
  commentId: M:Messenger.Core.Services.AzureTestDataService.CreateTeam(System.String,System.String)
  id: CreateTeam(System.String,System.String)
  parent: Messenger.Core.Services.AzureTestDataService
  langs:
  - csharp
  - vb
  name: CreateTeam(String, String)
  nameWithType: AzureTestDataService.CreateTeam(String, String)
  fullName: Messenger.Core.Services.AzureTestDataService.CreateTeam(System.String, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CreateTeam
    path: Services/AzureTestDataService.cs
    startLine: 26
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<int> CreateTeam(string teamName, string teamDescription)
    parameters:
    - id: teamName
      type: System.String
    - id: teamDescription
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function CreateTeam(teamName As String, teamDescription As String) As Task(Of Integer)
  overload: Messenger.Core.Services.AzureTestDataService.CreateTeam*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.AzureTestDataService.GetAllTeams
  commentId: M:Messenger.Core.Services.AzureTestDataService.GetAllTeams
  id: GetAllTeams
  parent: Messenger.Core.Services.AzureTestDataService
  langs:
  - csharp
  - vb
  name: GetAllTeams()
  nameWithType: AzureTestDataService.GetAllTeams()
  fullName: Messenger.Core.Services.AzureTestDataService.GetAllTeams()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAllTeams
    path: Services/AzureTestDataService.cs
    startLine: 63
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nGets list of all teams\n"
  example: []
  syntax:
    content: public async Task<IEnumerable<SampleTeam>> GetAllTeams()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Services.SampleTeam}}
      description: Array/List of teams
    content.vb: Public Function GetAllTeams As Task(Of IEnumerable(Of SampleTeam))
  overload: Messenger.Core.Services.AzureTestDataService.GetAllTeams*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.AzureTestDataService.UpdateTeam(Messenger.Core.Services.SampleTeam)
  commentId: M:Messenger.Core.Services.AzureTestDataService.UpdateTeam(Messenger.Core.Services.SampleTeam)
  id: UpdateTeam(Messenger.Core.Services.SampleTeam)
  parent: Messenger.Core.Services.AzureTestDataService
  langs:
  - csharp
  - vb
  name: UpdateTeam(SampleTeam)
  nameWithType: AzureTestDataService.UpdateTeam(SampleTeam)
  fullName: Messenger.Core.Services.AzureTestDataService.UpdateTeam(Messenger.Core.Services.SampleTeam)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: UpdateTeam
    path: Services/AzureTestDataService.cs
    startLine: 113
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nUpdates team with given id\n"
  example: []
  syntax:
    content: public async Task<int> UpdateTeam(SampleTeam team)
    parameters:
    - id: team
      type: Messenger.Core.Services.SampleTeam
      description: team object to update with
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: 1(Success)/0(Fail)
    content.vb: Public Function UpdateTeam(team As SampleTeam) As Task(Of Integer)
  overload: Messenger.Core.Services.AzureTestDataService.UpdateTeam*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.AzureTestDataService.DeleteTeam(System.Int32)
  commentId: M:Messenger.Core.Services.AzureTestDataService.DeleteTeam(System.Int32)
  id: DeleteTeam(System.Int32)
  parent: Messenger.Core.Services.AzureTestDataService
  langs:
  - csharp
  - vb
  name: DeleteTeam(Int32)
  nameWithType: AzureTestDataService.DeleteTeam(Int32)
  fullName: Messenger.Core.Services.AzureTestDataService.DeleteTeam(System.Int32)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: DeleteTeam
    path: Services/AzureTestDataService.cs
    startLine: 146
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nDeletes team with given id\n"
  example: []
  syntax:
    content: public async Task<int> DeleteTeam(int teamId)
    parameters:
    - id: teamId
      type: System.Int32
      description: Id to delete
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: 1(Success)/0(Fail)
    content.vb: Public Function DeleteTeam(teamId As Integer) As Task(Of Integer)
  overload: Messenger.Core.Services.AzureTestDataService.DeleteTeam*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Messenger.Core.Services.AzureServiceBase
  commentId: T:Messenger.Core.Services.AzureServiceBase
  parent: Messenger.Core.Services
  name: AzureServiceBase
  nameWithType: AzureServiceBase
  fullName: Messenger.Core.Services.AzureServiceBase
- uid: Messenger.Core.Services.AzureServiceBase.logger
  commentId: P:Messenger.Core.Services.AzureServiceBase.logger
  parent: Messenger.Core.Services.AzureServiceBase
  name: logger
  nameWithType: AzureServiceBase.logger
  fullName: Messenger.Core.Services.AzureServiceBase.logger
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection
  parent: Messenger.Core.Services.AzureServiceBase
  name: GetConnection()
  nameWithType: AzureServiceBase.GetConnection()
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection()
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: GetConnection(String)
  nameWithType: AzureServiceBase.GetConnection(String)
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: SetTestMode(String)
  nameWithType: AzureServiceBase.SetTestMode(String)
  fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.AzureTestDataService.CreateTeam*
  commentId: Overload:Messenger.Core.Services.AzureTestDataService.CreateTeam
  name: CreateTeam
  nameWithType: AzureTestDataService.CreateTeam
  fullName: Messenger.Core.Services.AzureTestDataService.CreateTeam
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.AzureTestDataService.GetAllTeams*
  commentId: Overload:Messenger.Core.Services.AzureTestDataService.GetAllTeams
  name: GetAllTeams
  nameWithType: AzureTestDataService.GetAllTeams
  fullName: Messenger.Core.Services.AzureTestDataService.GetAllTeams
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Services.SampleTeam}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Services.SampleTeam}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<SampleTeam>>
  nameWithType: Task<IEnumerable<SampleTeam>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Messenger.Core.Services.SampleTeam>>
  nameWithType.vb: Task(Of IEnumerable(Of SampleTeam))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Messenger.Core.Services.SampleTeam))
  name.vb: Task(Of IEnumerable(Of SampleTeam))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Services.SampleTeam
    name: SampleTeam
    nameWithType: SampleTeam
    fullName: Messenger.Core.Services.SampleTeam
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Services.SampleTeam
    name: SampleTeam
    nameWithType: SampleTeam
    fullName: Messenger.Core.Services.SampleTeam
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureTestDataService.UpdateTeam*
  commentId: Overload:Messenger.Core.Services.AzureTestDataService.UpdateTeam
  name: UpdateTeam
  nameWithType: AzureTestDataService.UpdateTeam
  fullName: Messenger.Core.Services.AzureTestDataService.UpdateTeam
- uid: Messenger.Core.Services.SampleTeam
  commentId: T:Messenger.Core.Services.SampleTeam
  parent: Messenger.Core.Services
  name: SampleTeam
  nameWithType: SampleTeam
  fullName: Messenger.Core.Services.SampleTeam
- uid: Messenger.Core.Services.AzureTestDataService.DeleteTeam*
  commentId: Overload:Messenger.Core.Services.AzureTestDataService.DeleteTeam
  name: DeleteTeam
  nameWithType: AzureTestDataService.DeleteTeam
  fullName: Messenger.Core.Services.AzureTestDataService.DeleteTeam
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
