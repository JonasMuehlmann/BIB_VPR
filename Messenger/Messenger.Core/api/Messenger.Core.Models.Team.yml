### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Models.Team
  commentId: T:Messenger.Core.Models.Team
  id: Team
  parent: Messenger.Core.Models
  children:
  - Messenger.Core.Models.Team.#ctor
  - Messenger.Core.Models.Team.Channels
  - Messenger.Core.Models.Team.CreationDate
  - Messenger.Core.Models.Team.Description
  - Messenger.Core.Models.Team.Id
  - Messenger.Core.Models.Team.Members
  - Messenger.Core.Models.Team.Name
  - Messenger.Core.Models.Team.ToString
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: Team
  fullName: Messenger.Core.Models.Team
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Team
    path: Models/Team.cs
    startLine: 6
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public class Team
    content.vb: Public Class Team
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Models.Team.Channels
  commentId: P:Messenger.Core.Models.Team.Channels
  id: Channels
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: Team.Channels
  fullName: Messenger.Core.Models.Team.Channels
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Channels
    path: Models/Team.cs
    startLine: 8
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public List<TeamChannel> Channels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Messenger.Core.Models.TeamChannel}
    content.vb: Public Property Channels As List(Of TeamChannel)
  overload: Messenger.Core.Models.Team.Channels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.Id
  commentId: P:Messenger.Core.Models.Team.Id
  id: Id
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Team.Id
  fullName: Messenger.Core.Models.Team.Id
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Id
    path: Models/Team.cs
    startLine: 10
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public uint Id { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Id As UInteger
  overload: Messenger.Core.Models.Team.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.Name
  commentId: P:Messenger.Core.Models.Team.Name
  id: Name
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Team.Name
  fullName: Messenger.Core.Models.Team.Name
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Name
    path: Models/Team.cs
    startLine: 12
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Messenger.Core.Models.Team.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.Description
  commentId: P:Messenger.Core.Models.Team.Description
  id: Description
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Team.Description
  fullName: Messenger.Core.Models.Team.Description
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Description
    path: Models/Team.cs
    startLine: 14
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Messenger.Core.Models.Team.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.CreationDate
  commentId: P:Messenger.Core.Models.Team.CreationDate
  id: CreationDate
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: Team.CreationDate
  fullName: Messenger.Core.Models.Team.CreationDate
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CreationDate
    path: Models/Team.cs
    startLine: 16
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public DateTime CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreationDate As Date
  overload: Messenger.Core.Models.Team.CreationDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.Members
  commentId: P:Messenger.Core.Models.Team.Members
  id: Members
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: Team.Members
  fullName: Messenger.Core.Models.Team.Members
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Members
    path: Models/Team.cs
    startLine: 18
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public List<User> Members { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Messenger.Core.Models.User}
    content.vb: Public Property Members As List(Of User)
  overload: Messenger.Core.Models.Team.Members*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.#ctor
  commentId: M:Messenger.Core.Models.Team.#ctor
  id: '#ctor'
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: Team()
  nameWithType: Team.Team()
  fullName: Messenger.Core.Models.Team.Team()
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Models/Team.cs
    startLine: 20
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public Team()
    content.vb: Public Sub New
  overload: Messenger.Core.Models.Team.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Models.Team.ToString
  commentId: M:Messenger.Core.Models.Team.ToString
  id: ToString
  parent: Messenger.Core.Models.Team
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Team.ToString()
  fullName: Messenger.Core.Models.Team.ToString()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Models/Team.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ToString
    path: Models/Team.cs
    startLine: 27
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Models
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Messenger.Core.Models.Team.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Messenger.Core.Models
  commentId: N:Messenger.Core.Models
  name: Messenger.Core.Models
  nameWithType: Messenger.Core.Models
  fullName: Messenger.Core.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Models.Team.Channels*
  commentId: Overload:Messenger.Core.Models.Team.Channels
  name: Channels
  nameWithType: Team.Channels
  fullName: Messenger.Core.Models.Team.Channels
- uid: System.Collections.Generic.List{Messenger.Core.Models.TeamChannel}
  commentId: T:System.Collections.Generic.List{Messenger.Core.Models.TeamChannel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TeamChannel>
  nameWithType: List<TeamChannel>
  fullName: System.Collections.Generic.List<Messenger.Core.Models.TeamChannel>
  nameWithType.vb: List(Of TeamChannel)
  fullName.vb: System.Collections.Generic.List(Of Messenger.Core.Models.TeamChannel)
  name.vb: List(Of TeamChannel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Models.TeamChannel
    name: TeamChannel
    nameWithType: TeamChannel
    fullName: Messenger.Core.Models.TeamChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Models.TeamChannel
    name: TeamChannel
    nameWithType: TeamChannel
    fullName: Messenger.Core.Models.TeamChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Messenger.Core.Models.Team.Id*
  commentId: Overload:Messenger.Core.Models.Team.Id
  name: Id
  nameWithType: Team.Id
  fullName: Messenger.Core.Models.Team.Id
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Messenger.Core.Models.Team.Name*
  commentId: Overload:Messenger.Core.Models.Team.Name
  name: Name
  nameWithType: Team.Name
  fullName: Messenger.Core.Models.Team.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Messenger.Core.Models.Team.Description*
  commentId: Overload:Messenger.Core.Models.Team.Description
  name: Description
  nameWithType: Team.Description
  fullName: Messenger.Core.Models.Team.Description
- uid: Messenger.Core.Models.Team.CreationDate*
  commentId: Overload:Messenger.Core.Models.Team.CreationDate
  name: CreationDate
  nameWithType: Team.CreationDate
  fullName: Messenger.Core.Models.Team.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Messenger.Core.Models.Team.Members*
  commentId: Overload:Messenger.Core.Models.Team.Members
  name: Members
  nameWithType: Team.Members
  fullName: Messenger.Core.Models.Team.Members
- uid: System.Collections.Generic.List{Messenger.Core.Models.User}
  commentId: T:System.Collections.Generic.List{Messenger.Core.Models.User}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<User>
  nameWithType: List<User>
  fullName: System.Collections.Generic.List<Messenger.Core.Models.User>
  nameWithType.vb: List(Of User)
  fullName.vb: System.Collections.Generic.List(Of Messenger.Core.Models.User)
  name.vb: List(Of User)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Models.User
    name: User
    nameWithType: User
    fullName: Messenger.Core.Models.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Models.User
    name: User
    nameWithType: User
    fullName: Messenger.Core.Models.User
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Models.Team.#ctor*
  commentId: Overload:Messenger.Core.Models.Team.#ctor
  name: Team
  nameWithType: Team.Team
  fullName: Messenger.Core.Models.Team.Team
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Models.Team.ToString*
  commentId: Overload:Messenger.Core.Models.Team.ToString
  name: ToString
  nameWithType: Team.ToString
  fullName: Messenger.Core.Models.Team.ToString
