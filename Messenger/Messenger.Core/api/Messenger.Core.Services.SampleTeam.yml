### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.SampleTeam
  commentId: T:Messenger.Core.Services.SampleTeam
  id: SampleTeam
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.SampleTeam.CreationDate
  - Messenger.Core.Services.SampleTeam.TeamDescription
  - Messenger.Core.Services.SampleTeam.TeamId
  - Messenger.Core.Services.SampleTeam.TeamName
  langs:
  - csharp
  - vb
  name: SampleTeam
  nameWithType: SampleTeam
  fullName: Messenger.Core.Services.SampleTeam
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SampleTeam
    path: Services/AzureTestDataService.cs
    startLine: 13
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nSample class to show database mapping\n"
  example: []
  syntax:
    content: public class SampleTeam
    content.vb: Public Class SampleTeam
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.SampleTeam.TeamId
  commentId: P:Messenger.Core.Services.SampleTeam.TeamId
  id: TeamId
  parent: Messenger.Core.Services.SampleTeam
  langs:
  - csharp
  - vb
  name: TeamId
  nameWithType: SampleTeam.TeamId
  fullName: Messenger.Core.Services.SampleTeam.TeamId
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: TeamId
    path: Services/AzureTestDataService.cs
    startLine: 15
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public int TeamId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TeamId As Integer
  overload: Messenger.Core.Services.SampleTeam.TeamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SampleTeam.TeamName
  commentId: P:Messenger.Core.Services.SampleTeam.TeamName
  id: TeamName
  parent: Messenger.Core.Services.SampleTeam
  langs:
  - csharp
  - vb
  name: TeamName
  nameWithType: SampleTeam.TeamName
  fullName: Messenger.Core.Services.SampleTeam.TeamName
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: TeamName
    path: Services/AzureTestDataService.cs
    startLine: 16
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public string TeamName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TeamName As String
  overload: Messenger.Core.Services.SampleTeam.TeamName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SampleTeam.TeamDescription
  commentId: P:Messenger.Core.Services.SampleTeam.TeamDescription
  id: TeamDescription
  parent: Messenger.Core.Services.SampleTeam
  langs:
  - csharp
  - vb
  name: TeamDescription
  nameWithType: SampleTeam.TeamDescription
  fullName: Messenger.Core.Services.SampleTeam.TeamDescription
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: TeamDescription
    path: Services/AzureTestDataService.cs
    startLine: 17
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public string TeamDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TeamDescription As String
  overload: Messenger.Core.Services.SampleTeam.TeamDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SampleTeam.CreationDate
  commentId: P:Messenger.Core.Services.SampleTeam.CreationDate
  id: CreationDate
  parent: Messenger.Core.Services.SampleTeam
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: SampleTeam.CreationDate
  fullName: Messenger.Core.Services.SampleTeam.CreationDate
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Services/AzureTestDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CreationDate
    path: Services/AzureTestDataService.cs
    startLine: 18
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public DateTime CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreationDate As Date
  overload: Messenger.Core.Services.SampleTeam.CreationDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.SampleTeam.TeamId*
  commentId: Overload:Messenger.Core.Services.SampleTeam.TeamId
  name: TeamId
  nameWithType: SampleTeam.TeamId
  fullName: Messenger.Core.Services.SampleTeam.TeamId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Messenger.Core.Services.SampleTeam.TeamName*
  commentId: Overload:Messenger.Core.Services.SampleTeam.TeamName
  name: TeamName
  nameWithType: SampleTeam.TeamName
  fullName: Messenger.Core.Services.SampleTeam.TeamName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Messenger.Core.Services.SampleTeam.TeamDescription*
  commentId: Overload:Messenger.Core.Services.SampleTeam.TeamDescription
  name: TeamDescription
  nameWithType: SampleTeam.TeamDescription
  fullName: Messenger.Core.Services.SampleTeam.TeamDescription
- uid: Messenger.Core.Services.SampleTeam.CreationDate*
  commentId: Overload:Messenger.Core.Services.SampleTeam.CreationDate
  name: CreationDate
  nameWithType: SampleTeam.CreationDate
  fullName: Messenger.Core.Services.SampleTeam.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
