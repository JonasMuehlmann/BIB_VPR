### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.MessageService
  commentId: T:Messenger.Core.Services.MessageService
  id: MessageService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.MessageService.CreateMessage(System.UInt32,System.String,System.String,System.Nullable{System.UInt32},System.Collections.Generic.IEnumerable{System.String})
  - Messenger.Core.Services.MessageService.RetrieveMessages(System.UInt32)
  langs:
  - csharp
  - vb
  name: MessageService
  nameWithType: MessageService
  fullName: Messenger.Core.Services.MessageService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/MessageService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: MessageService
    path: Services/MessageService.cs
    startLine: 11
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: 'public class MessageService : AzureServiceBase'
    content.vb: >-
      Public Class MessageService
          Inherits AzureServiceBase
  inheritance:
  - System.Object
  - Messenger.Core.Services.AzureServiceBase
  inheritedMembers:
  - Messenger.Core.Services.AzureServiceBase.logger
  - Messenger.Core.Services.AzureServiceBase.GetConnection
  - Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  - Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.MessageService.CreateMessage(System.UInt32,System.String,System.String,System.Nullable{System.UInt32},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Messenger.Core.Services.MessageService.CreateMessage(System.UInt32,System.String,System.String,System.Nullable{System.UInt32},System.Collections.Generic.IEnumerable{System.String})
  id: CreateMessage(System.UInt32,System.String,System.String,System.Nullable{System.UInt32},System.Collections.Generic.IEnumerable{System.String})
  parent: Messenger.Core.Services.MessageService
  langs:
  - csharp
  - vb
  name: CreateMessage(UInt32, String, String, Nullable<UInt32>, IEnumerable<String>)
  nameWithType: MessageService.CreateMessage(UInt32, String, String, Nullable<UInt32>, IEnumerable<String>)
  fullName: Messenger.Core.Services.MessageService.CreateMessage(System.UInt32, System.String, System.String, System.Nullable<System.UInt32>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/MessageService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CreateMessage
    path: Services/MessageService.cs
    startLine: 22
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nSend a message to a specified recipient and retrieve the sent messages id.\n"
  example: []
  syntax:
    content: public async Task<uint?> CreateMessage(uint recipientsId, string senderId, string message, uint? parentMessageId = default(uint? ), IEnumerable<string> attachmentBlobNames = null)
    parameters:
    - id: recipientsId
      type: System.UInt32
    - id: senderId
      type: System.String
      description: The id of the message&apos;s sender
    - id: message
      type: System.String
      description: The content of the message
    - id: parentMessageId
      type: System.Nullable{System.UInt32}
      description: The optional id of a message this one is a reply to
    - id: attachmentBlobNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumerable of blob names of uploaded attachments
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
      description: The id of the created message if it was created successfully, null otherwise
    content.vb: Public Function CreateMessage(recipientsId As UInteger, senderId As String, message As String, parentMessageId As UInteger? = Nothing, attachmentBlobNames As IEnumerable(Of String) = Nothing) As Task(Of UInteger?)
  overload: Messenger.Core.Services.MessageService.CreateMessage*
  nameWithType.vb: MessageService.CreateMessage(UInt32, String, String, Nullable(Of UInt32), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.MessageService.CreateMessage(System.UInt32, System.String, System.String, System.Nullable(Of System.UInt32), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateMessage(UInt32, String, String, Nullable(Of UInt32), IEnumerable(Of String))
- uid: Messenger.Core.Services.MessageService.RetrieveMessages(System.UInt32)
  commentId: M:Messenger.Core.Services.MessageService.RetrieveMessages(System.UInt32)
  id: RetrieveMessages(System.UInt32)
  parent: Messenger.Core.Services.MessageService
  langs:
  - csharp
  - vb
  name: RetrieveMessages(UInt32)
  nameWithType: MessageService.RetrieveMessages(UInt32)
  fullName: Messenger.Core.Services.MessageService.RetrieveMessages(System.UInt32)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/MessageService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: RetrieveMessages
    path: Services/MessageService.cs
    startLine: 72
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nRetrieve all Messages of a team/chat with user data of the sender\n"
  example: []
  syntax:
    content: public async Task<IList<Message>> RetrieveMessages(uint teamId)
    parameters:
    - id: teamId
      type: System.UInt32
      description: The id of a team, whose messages should be retrieved
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Messenger.Core.Models.Message}}
      description: An enumerable of data rows containing the message data
    content.vb: Public Function RetrieveMessages(teamId As UInteger) As Task(Of IList(Of Message))
  overload: Messenger.Core.Services.MessageService.RetrieveMessages*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Messenger.Core.Services.AzureServiceBase
  commentId: T:Messenger.Core.Services.AzureServiceBase
  parent: Messenger.Core.Services
  name: AzureServiceBase
  nameWithType: AzureServiceBase
  fullName: Messenger.Core.Services.AzureServiceBase
- uid: Messenger.Core.Services.AzureServiceBase.logger
  commentId: P:Messenger.Core.Services.AzureServiceBase.logger
  parent: Messenger.Core.Services.AzureServiceBase
  name: logger
  nameWithType: AzureServiceBase.logger
  fullName: Messenger.Core.Services.AzureServiceBase.logger
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection
  parent: Messenger.Core.Services.AzureServiceBase
  name: GetConnection()
  nameWithType: AzureServiceBase.GetConnection()
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection()
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: GetConnection(String)
  nameWithType: AzureServiceBase.GetConnection(String)
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: SetTestMode(String)
  nameWithType: AzureServiceBase.SetTestMode(String)
  fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.MessageService.CreateMessage*
  commentId: Overload:Messenger.Core.Services.MessageService.CreateMessage
  name: CreateMessage
  nameWithType: MessageService.CreateMessage
  fullName: Messenger.Core.Services.MessageService.CreateMessage
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt32>
  nameWithType: Nullable<UInt32>
  fullName: System.Nullable<System.UInt32>
  nameWithType.vb: Nullable(Of UInt32)
  fullName.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Nullable<UInt32>>
  nameWithType: Task<Nullable<UInt32>>
  fullName: System.Threading.Tasks.Task<System.Nullable<System.UInt32>>
  nameWithType.vb: Task(Of Nullable(Of UInt32))
  fullName.vb: System.Threading.Tasks.Task(Of System.Nullable(Of System.UInt32))
  name.vb: Task(Of Nullable(Of UInt32))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.MessageService.RetrieveMessages*
  commentId: Overload:Messenger.Core.Services.MessageService.RetrieveMessages
  name: RetrieveMessages
  nameWithType: MessageService.RetrieveMessages
  fullName: Messenger.Core.Services.MessageService.RetrieveMessages
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Messenger.Core.Models.Message}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Messenger.Core.Models.Message}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IList<Message>>
  nameWithType: Task<IList<Message>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Messenger.Core.Models.Message>>
  nameWithType.vb: Task(Of IList(Of Message))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Messenger.Core.Models.Message))
  name.vb: Task(Of IList(Of Message))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Models.Message
    name: Message
    nameWithType: Message
    fullName: Messenger.Core.Models.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Models.Message
    name: Message
    nameWithType: Message
    fullName: Messenger.Core.Models.Message
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
