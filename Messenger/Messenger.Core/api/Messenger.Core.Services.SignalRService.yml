### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.SignalRService
  commentId: T:Messenger.Core.Services.SignalRService
  id: SignalRService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.SignalRService.#ctor
  - Messenger.Core.Services.SignalRService.AddToTeam(System.String,System.String)
  - Messenger.Core.Services.SignalRService.Close
  - Messenger.Core.Services.SignalRService.ConnectionId
  - Messenger.Core.Services.SignalRService.InviteReceived
  - Messenger.Core.Services.SignalRService.JoinTeam(System.String)
  - Messenger.Core.Services.SignalRService.MessageReceived
  - Messenger.Core.Services.SignalRService.Open(System.String)
  - Messenger.Core.Services.SignalRService.SendMessage(Messenger.Core.Models.Message)
  langs:
  - csharp
  - vb
  name: SignalRService
  nameWithType: SignalRService
  fullName: Messenger.Core.Services.SignalRService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SignalRService
    path: Services/SignalRService.cs
    startLine: 12
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public class SignalRService
    content.vb: Public Class SignalRService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.SignalRService.ConnectionId
  commentId: P:Messenger.Core.Services.SignalRService.ConnectionId
  id: ConnectionId
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: SignalRService.ConnectionId
  fullName: Messenger.Core.Services.SignalRService.ConnectionId
  type: Property
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: ConnectionId
    path: Services/SignalRService.cs
    startLine: 22
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public string ConnectionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionId As String
  overload: Messenger.Core.Services.SignalRService.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Messenger.Core.Services.SignalRService.MessageReceived
  commentId: E:Messenger.Core.Services.SignalRService.MessageReceived
  id: MessageReceived
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: MessageReceived
  nameWithType: SignalRService.MessageReceived
  fullName: Messenger.Core.Services.SignalRService.MessageReceived
  type: Event
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: MessageReceived
    path: Services/SignalRService.cs
    startLine: 33
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nDelegate on &quot;ReceiveMessage&quot;(Hub Method)\n"
  example: []
  syntax:
    content: public event EventHandler<Message> MessageReceived
    return:
      type: System.EventHandler{Messenger.Core.Models.Message}
    content.vb: Public Event MessageReceived As EventHandler(Of Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.InviteReceived
  commentId: E:Messenger.Core.Services.SignalRService.InviteReceived
  id: InviteReceived
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: InviteReceived
  nameWithType: SignalRService.InviteReceived
  fullName: Messenger.Core.Services.SignalRService.InviteReceived
  type: Event
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: InviteReceived
    path: Services/SignalRService.cs
    startLine: 35
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public event EventHandler<uint> InviteReceived
    return:
      type: System.EventHandler{System.UInt32}
    content.vb: Public Event InviteReceived As EventHandler(Of UInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.#ctor
  commentId: M:Messenger.Core.Services.SignalRService.#ctor
  id: '#ctor'
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: SignalRService()
  nameWithType: SignalRService.SignalRService()
  fullName: Messenger.Core.Services.SignalRService.SignalRService()
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Services/SignalRService.cs
    startLine: 37
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public SignalRService()
    content.vb: Public Sub New
  overload: Messenger.Core.Services.SignalRService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.Open(System.String)
  commentId: M:Messenger.Core.Services.SignalRService.Open(System.String)
  id: Open(System.String)
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: Open(String)
  nameWithType: SignalRService.Open(String)
  fullName: Messenger.Core.Services.SignalRService.Open(System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Open
    path: Services/SignalRService.cs
    startLine: 56
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nStarts the connection with the preset\n"
  example: []
  syntax:
    content: public async Task Open(string userId)
    parameters:
    - id: userId
      type: System.String
      description: Id of the current user
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous task to be awaited
    content.vb: Public Function Open(userId As String) As Task
  overload: Messenger.Core.Services.SignalRService.Open*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.Close
  commentId: M:Messenger.Core.Services.SignalRService.Close
  id: Close
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: SignalRService.Close()
  fullName: Messenger.Core.Services.SignalRService.Close()
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: Close
    path: Services/SignalRService.cs
    startLine: 76
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nCloses the connection with the hub\n"
  example: []
  syntax:
    content: public async Task Close()
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous task to be awaited
    content.vb: Public Function Close As Task
  overload: Messenger.Core.Services.SignalRService.Close*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.JoinTeam(System.String)
  commentId: M:Messenger.Core.Services.SignalRService.JoinTeam(System.String)
  id: JoinTeam(System.String)
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: JoinTeam(String)
  nameWithType: SignalRService.JoinTeam(String)
  fullName: Messenger.Core.Services.SignalRService.JoinTeam(System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: JoinTeam
    path: Services/SignalRService.cs
    startLine: 93
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nJoins a hub group with the current connection id\n"
  example: []
  syntax:
    content: public async Task JoinTeam(string teamId)
    parameters:
    - id: teamId
      type: System.String
      description: Team id as the group name
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous task to be awaited
    content.vb: Public Function JoinTeam(teamId As String) As Task
  overload: Messenger.Core.Services.SignalRService.JoinTeam*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.SendMessage(Messenger.Core.Models.Message)
  commentId: M:Messenger.Core.Services.SignalRService.SendMessage(Messenger.Core.Models.Message)
  id: SendMessage(Messenger.Core.Models.Message)
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: SendMessage(Message)
  nameWithType: SignalRService.SendMessage(Message)
  fullName: Messenger.Core.Services.SignalRService.SendMessage(Messenger.Core.Models.Message)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: SendMessage
    path: Services/SignalRService.cs
    startLine: 110
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nSends a message to a hub group\n"
  example: []
  syntax:
    content: public async Task SendMessage(Message message)
    parameters:
    - id: message
      type: Messenger.Core.Models.Message
      description: A complete message object to be sent
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous task to be awaited
    content.vb: Public Function SendMessage(message As Message) As Task
  overload: Messenger.Core.Services.SignalRService.SendMessage*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.SignalRService.AddToTeam(System.String,System.String)
  commentId: M:Messenger.Core.Services.SignalRService.AddToTeam(System.String,System.String)
  id: AddToTeam(System.String,System.String)
  parent: Messenger.Core.Services.SignalRService
  langs:
  - csharp
  - vb
  name: AddToTeam(String, String)
  nameWithType: SignalRService.AddToTeam(String, String)
  fullName: Messenger.Core.Services.SignalRService.AddToTeam(System.String, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/SignalRService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: AddToTeam
    path: Services/SignalRService.cs
    startLine: 121
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nAdds the user to the hub group\n"
  example: []
  syntax:
    content: public async Task AddToTeam(string userId, string teamId)
    parameters:
    - id: userId
      type: System.String
      description: Id of the user to add
    - id: teamId
      type: System.String
      description: Id the of team to add user to
    return:
      type: System.Threading.Tasks.Task
      description: Asynchronous task to be awaited
    content.vb: Public Function AddToTeam(userId As String, teamId As String) As Task
  overload: Messenger.Core.Services.SignalRService.AddToTeam*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.SignalRService.ConnectionId*
  commentId: Overload:Messenger.Core.Services.SignalRService.ConnectionId
  name: ConnectionId
  nameWithType: SignalRService.ConnectionId
  fullName: Messenger.Core.Services.SignalRService.ConnectionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler{Messenger.Core.Models.Message}
  commentId: T:System.EventHandler{Messenger.Core.Models.Message}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Message>
  nameWithType: EventHandler<Message>
  fullName: System.EventHandler<Messenger.Core.Models.Message>
  nameWithType.vb: EventHandler(Of Message)
  fullName.vb: System.EventHandler(Of Messenger.Core.Models.Message)
  name.vb: EventHandler(Of Message)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Models.Message
    name: Message
    nameWithType: Message
    fullName: Messenger.Core.Models.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Models.Message
    name: Message
    nameWithType: Message
    fullName: Messenger.Core.Models.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.UInt32}
  commentId: T:System.EventHandler{System.UInt32}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UInt32>
  nameWithType: EventHandler<UInt32>
  fullName: System.EventHandler<System.UInt32>
  nameWithType.vb: EventHandler(Of UInt32)
  fullName.vb: System.EventHandler(Of System.UInt32)
  name.vb: EventHandler(Of UInt32)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.SignalRService.#ctor*
  commentId: Overload:Messenger.Core.Services.SignalRService.#ctor
  name: SignalRService
  nameWithType: SignalRService.SignalRService
  fullName: Messenger.Core.Services.SignalRService.SignalRService
- uid: Messenger.Core.Services.SignalRService.Open*
  commentId: Overload:Messenger.Core.Services.SignalRService.Open
  name: Open
  nameWithType: SignalRService.Open
  fullName: Messenger.Core.Services.SignalRService.Open
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.SignalRService.Close*
  commentId: Overload:Messenger.Core.Services.SignalRService.Close
  name: Close
  nameWithType: SignalRService.Close
  fullName: Messenger.Core.Services.SignalRService.Close
- uid: Messenger.Core.Services.SignalRService.JoinTeam*
  commentId: Overload:Messenger.Core.Services.SignalRService.JoinTeam
  name: JoinTeam
  nameWithType: SignalRService.JoinTeam
  fullName: Messenger.Core.Services.SignalRService.JoinTeam
- uid: Messenger.Core.Services.SignalRService.SendMessage*
  commentId: Overload:Messenger.Core.Services.SignalRService.SendMessage
  name: SendMessage
  nameWithType: SignalRService.SendMessage
  fullName: Messenger.Core.Services.SignalRService.SendMessage
- uid: Messenger.Core.Models.Message
  commentId: T:Messenger.Core.Models.Message
  parent: Messenger.Core.Models
  name: Message
  nameWithType: Message
  fullName: Messenger.Core.Models.Message
- uid: Messenger.Core.Models
  commentId: N:Messenger.Core.Models
  name: Messenger.Core.Models
  nameWithType: Messenger.Core.Models
  fullName: Messenger.Core.Models
- uid: Messenger.Core.Services.SignalRService.AddToTeam*
  commentId: Overload:Messenger.Core.Services.SignalRService.AddToTeam
  name: AddToTeam
  nameWithType: SignalRService.AddToTeam
  fullName: Messenger.Core.Services.SignalRService.AddToTeam
