### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.PrivateChatService
  commentId: T:Messenger.Core.Services.PrivateChatService
  id: PrivateChatService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.PrivateChatService.CreatePrivateChat(System.String,System.String)
  - Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser(System.String)
  - Messenger.Core.Services.PrivateChatService.GetPartner(System.UInt32)
  langs:
  - csharp
  - vb
  name: PrivateChatService
  nameWithType: PrivateChatService
  fullName: Messenger.Core.Services.PrivateChatService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/PrivateChatService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: PrivateChatService
    path: Services/PrivateChatService.cs
    startLine: 15
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: 'public class PrivateChatService : TeamService'
    content.vb: >-
      Public Class PrivateChatService
          Inherits TeamService
  inheritance:
  - System.Object
  - Messenger.Core.Services.AzureServiceBase
  - Messenger.Core.Services.TeamService
  inheritedMembers:
  - Messenger.Core.Services.TeamService.CreateTeam(System.String,System.String)
  - Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
  - Messenger.Core.Services.TeamService.GetAllTeams
  - Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
  - Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
  - Messenger.Core.Services.TeamService.AddMember(System.String,System.UInt32)
  - Messenger.Core.Services.TeamService.RemoveMember(System.String,System.UInt32)
  - Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
  - Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
  - Messenger.Core.Services.AzureServiceBase.logger
  - Messenger.Core.Services.AzureServiceBase.GetConnection
  - Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  - Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.PrivateChatService.CreatePrivateChat(System.String,System.String)
  commentId: M:Messenger.Core.Services.PrivateChatService.CreatePrivateChat(System.String,System.String)
  id: CreatePrivateChat(System.String,System.String)
  parent: Messenger.Core.Services.PrivateChatService
  langs:
  - csharp
  - vb
  name: CreatePrivateChat(String, String)
  nameWithType: PrivateChatService.CreatePrivateChat(String, String)
  fullName: Messenger.Core.Services.PrivateChatService.CreatePrivateChat(System.String, System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/PrivateChatService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: CreatePrivateChat
    path: Services/PrivateChatService.cs
    startLine: 23
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nCreate a private chat between the users identified by myUserId and otherUserId.\n"
  example: []
  syntax:
    content: public async Task<uint?> CreatePrivateChat(string myUserId, string otherUserId)
    parameters:
    - id: myUserId
      type: System.String
      description: user-Id of the Creator
    - id: otherUserId
      type: System.String
      description: user-Id of the other Person
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
      description: The teamId of the created Team
    content.vb: Public Function CreatePrivateChat(myUserId As String, otherUserId As String) As Task(Of UInteger?)
  overload: Messenger.Core.Services.PrivateChatService.CreatePrivateChat*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser(System.String)
  commentId: M:Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser(System.String)
  id: GetAllPrivateChatsFromUser(System.String)
  parent: Messenger.Core.Services.PrivateChatService
  langs:
  - csharp
  - vb
  name: GetAllPrivateChatsFromUser(String)
  nameWithType: PrivateChatService.GetAllPrivateChatsFromUser(String)
  fullName: Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser(System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/PrivateChatService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAllPrivateChatsFromUser
    path: Services/PrivateChatService.cs
    startLine: 83
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nLists all private chats of a specified user\n"
  example: []
  syntax:
    content: public async Task<IEnumerable<Team>> GetAllPrivateChatsFromUser(string userId)
    parameters:
    - id: userId
      type: System.String
      description: the id of a user to retrieve private chats of
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Models.Team}}
      description: An enumerable of Team objects
    content.vb: Public Function GetAllPrivateChatsFromUser(userId As String) As Task(Of IEnumerable(Of Team))
  overload: Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.PrivateChatService.GetPartner(System.UInt32)
  commentId: M:Messenger.Core.Services.PrivateChatService.GetPartner(System.UInt32)
  id: GetPartner(System.UInt32)
  parent: Messenger.Core.Services.PrivateChatService
  langs:
  - csharp
  - vb
  name: GetPartner(UInt32)
  nameWithType: PrivateChatService.GetPartner(UInt32)
  fullName: Messenger.Core.Services.PrivateChatService.GetPartner(System.UInt32)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/PrivateChatService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetPartner
    path: Services/PrivateChatService.cs
    startLine: 99
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  summary: "\nIn a private chat, retrieve the conversation partner&apos;s user id\n"
  example: []
  syntax:
    content: public string GetPartner(uint teamId)
    parameters:
    - id: teamId
      type: System.UInt32
      description: the id of the team belonging to the private chat
    return:
      type: System.String
      description: The user id of the conversation partner
    content.vb: Public Function GetPartner(teamId As UInteger) As String
  overload: Messenger.Core.Services.PrivateChatService.GetPartner*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Messenger.Core.Services.AzureServiceBase
  commentId: T:Messenger.Core.Services.AzureServiceBase
  parent: Messenger.Core.Services
  name: AzureServiceBase
  nameWithType: AzureServiceBase
  fullName: Messenger.Core.Services.AzureServiceBase
- uid: Messenger.Core.Services.TeamService
  commentId: T:Messenger.Core.Services.TeamService
  parent: Messenger.Core.Services
  name: TeamService
  nameWithType: TeamService
  fullName: Messenger.Core.Services.TeamService
- uid: Messenger.Core.Services.TeamService.CreateTeam(System.String,System.String)
  commentId: M:Messenger.Core.Services.TeamService.CreateTeam(System.String,System.String)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: CreateTeam(String, String)
  nameWithType: TeamService.CreateTeam(String, String)
  fullName: Messenger.Core.Services.TeamService.CreateTeam(System.String, System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.CreateTeam(System.String,System.String)
    name: CreateTeam
    nameWithType: TeamService.CreateTeam
    fullName: Messenger.Core.Services.TeamService.CreateTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.CreateTeam(System.String,System.String)
    name: CreateTeam
    nameWithType: TeamService.CreateTeam
    fullName: Messenger.Core.Services.TeamService.CreateTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
  commentId: M:Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: DeleteTeam(UInt32)
  nameWithType: TeamService.DeleteTeam(UInt32)
  fullName: Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
    name: DeleteTeam
    nameWithType: TeamService.DeleteTeam
    fullName: Messenger.Core.Services.TeamService.DeleteTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.DeleteTeam(System.UInt32)
    name: DeleteTeam
    nameWithType: TeamService.DeleteTeam
    fullName: Messenger.Core.Services.TeamService.DeleteTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.GetAllTeams
  commentId: M:Messenger.Core.Services.TeamService.GetAllTeams
  parent: Messenger.Core.Services.TeamService
  name: GetAllTeams()
  nameWithType: TeamService.GetAllTeams()
  fullName: Messenger.Core.Services.TeamService.GetAllTeams()
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.GetAllTeams
    name: GetAllTeams
    nameWithType: TeamService.GetAllTeams
    fullName: Messenger.Core.Services.TeamService.GetAllTeams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.GetAllTeams
    name: GetAllTeams
    nameWithType: TeamService.GetAllTeams
    fullName: Messenger.Core.Services.TeamService.GetAllTeams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
  commentId: M:Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: GetTeam(UInt32)
  nameWithType: TeamService.GetTeam(UInt32)
  fullName: Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
    name: GetTeam
    nameWithType: TeamService.GetTeam
    fullName: Messenger.Core.Services.TeamService.GetTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.GetTeam(System.UInt32)
    name: GetTeam
    nameWithType: TeamService.GetTeam
    fullName: Messenger.Core.Services.TeamService.GetTeam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
  commentId: M:Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: GetAllTeamsByUserId(String)
  nameWithType: TeamService.GetAllTeamsByUserId(String)
  fullName: Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
    name: GetAllTeamsByUserId
    nameWithType: TeamService.GetAllTeamsByUserId
    fullName: Messenger.Core.Services.TeamService.GetAllTeamsByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.GetAllTeamsByUserId(System.String)
    name: GetAllTeamsByUserId
    nameWithType: TeamService.GetAllTeamsByUserId
    fullName: Messenger.Core.Services.TeamService.GetAllTeamsByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.AddMember(System.String,System.UInt32)
  commentId: M:Messenger.Core.Services.TeamService.AddMember(System.String,System.UInt32)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: AddMember(String, UInt32)
  nameWithType: TeamService.AddMember(String, UInt32)
  fullName: Messenger.Core.Services.TeamService.AddMember(System.String, System.UInt32)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.AddMember(System.String,System.UInt32)
    name: AddMember
    nameWithType: TeamService.AddMember
    fullName: Messenger.Core.Services.TeamService.AddMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.AddMember(System.String,System.UInt32)
    name: AddMember
    nameWithType: TeamService.AddMember
    fullName: Messenger.Core.Services.TeamService.AddMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.RemoveMember(System.String,System.UInt32)
  commentId: M:Messenger.Core.Services.TeamService.RemoveMember(System.String,System.UInt32)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: RemoveMember(String, UInt32)
  nameWithType: TeamService.RemoveMember(String, UInt32)
  fullName: Messenger.Core.Services.TeamService.RemoveMember(System.String, System.UInt32)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.RemoveMember(System.String,System.UInt32)
    name: RemoveMember
    nameWithType: TeamService.RemoveMember
    fullName: Messenger.Core.Services.TeamService.RemoveMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.RemoveMember(System.String,System.UInt32)
    name: RemoveMember
    nameWithType: TeamService.RemoveMember
    fullName: Messenger.Core.Services.TeamService.RemoveMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
  commentId: M:Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: GetAllMembershipByUserId(String)
  nameWithType: TeamService.GetAllMembershipByUserId(String)
  fullName: Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
    name: GetAllMembershipByUserId
    nameWithType: TeamService.GetAllMembershipByUserId
    fullName: Messenger.Core.Services.TeamService.GetAllMembershipByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.GetAllMembershipByUserId(System.String)
    name: GetAllMembershipByUserId
    nameWithType: TeamService.GetAllMembershipByUserId
    fullName: Messenger.Core.Services.TeamService.GetAllMembershipByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
  commentId: M:Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
  parent: Messenger.Core.Services.TeamService
  isExternal: true
  name: GetAllMembers(UInt32)
  nameWithType: TeamService.GetAllMembers(UInt32)
  fullName: Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
  spec.csharp:
  - uid: Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
    name: GetAllMembers
    nameWithType: TeamService.GetAllMembers
    fullName: Messenger.Core.Services.TeamService.GetAllMembers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.TeamService.GetAllMembers(System.UInt32)
    name: GetAllMembers
    nameWithType: TeamService.GetAllMembers
    fullName: Messenger.Core.Services.TeamService.GetAllMembers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.logger
  commentId: P:Messenger.Core.Services.AzureServiceBase.logger
  parent: Messenger.Core.Services.AzureServiceBase
  name: logger
  nameWithType: AzureServiceBase.logger
  fullName: Messenger.Core.Services.AzureServiceBase.logger
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection
  parent: Messenger.Core.Services.AzureServiceBase
  name: GetConnection()
  nameWithType: AzureServiceBase.GetConnection()
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection()
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: GetConnection(String)
  nameWithType: AzureServiceBase.GetConnection(String)
  fullName: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.GetConnection(System.String)
    name: GetConnection
    nameWithType: AzureServiceBase.GetConnection
    fullName: Messenger.Core.Services.AzureServiceBase.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  commentId: M:Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  parent: Messenger.Core.Services.AzureServiceBase
  isExternal: true
  name: SetTestMode(String)
  nameWithType: AzureServiceBase.SetTestMode(String)
  fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
  spec.csharp:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Messenger.Core.Services.AzureServiceBase.SetTestMode(System.String)
    name: SetTestMode
    nameWithType: AzureServiceBase.SetTestMode
    fullName: Messenger.Core.Services.AzureServiceBase.SetTestMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.PrivateChatService.CreatePrivateChat*
  commentId: Overload:Messenger.Core.Services.PrivateChatService.CreatePrivateChat
  name: CreatePrivateChat
  nameWithType: PrivateChatService.CreatePrivateChat
  fullName: Messenger.Core.Services.PrivateChatService.CreatePrivateChat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.UInt32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Nullable<UInt32>>
  nameWithType: Task<Nullable<UInt32>>
  fullName: System.Threading.Tasks.Task<System.Nullable<System.UInt32>>
  nameWithType.vb: Task(Of Nullable(Of UInt32))
  fullName.vb: System.Threading.Tasks.Task(Of System.Nullable(Of System.UInt32))
  name.vb: Task(Of Nullable(Of UInt32))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser*
  commentId: Overload:Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser
  name: GetAllPrivateChatsFromUser
  nameWithType: PrivateChatService.GetAllPrivateChatsFromUser
  fullName: Messenger.Core.Services.PrivateChatService.GetAllPrivateChatsFromUser
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Models.Team}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Messenger.Core.Models.Team}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<Team>>
  nameWithType: Task<IEnumerable<Team>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Messenger.Core.Models.Team>>
  nameWithType.vb: Task(Of IEnumerable(Of Team))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Messenger.Core.Models.Team))
  name.vb: Task(Of IEnumerable(Of Team))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Messenger.Core.Models.Team
    name: Team
    nameWithType: Team
    fullName: Messenger.Core.Models.Team
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Messenger.Core.Models.Team
    name: Team
    nameWithType: Team
    fullName: Messenger.Core.Models.Team
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Messenger.Core.Services.PrivateChatService.GetPartner*
  commentId: Overload:Messenger.Core.Services.PrivateChatService.GetPartner
  name: GetPartner
  nameWithType: PrivateChatService.GetPartner
  fullName: Messenger.Core.Services.PrivateChatService.GetPartner
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
