### YamlMime:ManagedReference
items:
- uid: Messenger.Core.Services.HttpDataService
  commentId: T:Messenger.Core.Services.HttpDataService
  id: HttpDataService
  parent: Messenger.Core.Services
  children:
  - Messenger.Core.Services.HttpDataService.#ctor(System.String)
  - Messenger.Core.Services.HttpDataService.DeleteAsync(System.String)
  - Messenger.Core.Services.HttpDataService.GetAsync``1(System.String,System.String,System.Boolean)
  - Messenger.Core.Services.HttpDataService.PostAsJsonAsync``1(System.String,``0)
  - Messenger.Core.Services.HttpDataService.PostAsync``1(System.String,``0)
  - Messenger.Core.Services.HttpDataService.PutAsJsonAsync``1(System.String,``0)
  - Messenger.Core.Services.HttpDataService.PutAsync``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: HttpDataService
  nameWithType: HttpDataService
  fullName: Messenger.Core.Services.HttpDataService
  type: Class
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: HttpDataService
    path: Services/HttpDataService.cs
    startLine: 13
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public class HttpDataService
    content.vb: Public Class HttpDataService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Messenger.Core.Services.HttpDataService.#ctor(System.String)
  commentId: M:Messenger.Core.Services.HttpDataService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: HttpDataService(String)
  nameWithType: HttpDataService.HttpDataService(String)
  fullName: Messenger.Core.Services.HttpDataService.HttpDataService(System.String)
  type: Constructor
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: .ctor
    path: Services/HttpDataService.cs
    startLine: 18
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public HttpDataService(string defaultBaseUrl = "")
    parameters:
    - id: defaultBaseUrl
      type: System.String
    content.vb: Public Sub New(defaultBaseUrl As String = "")
  overload: Messenger.Core.Services.HttpDataService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Messenger.Core.Services.HttpDataService.GetAsync``1(System.String,System.String,System.Boolean)
  commentId: M:Messenger.Core.Services.HttpDataService.GetAsync``1(System.String,System.String,System.Boolean)
  id: GetAsync``1(System.String,System.String,System.Boolean)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: GetAsync<T>(String, String, Boolean)
  nameWithType: HttpDataService.GetAsync<T>(String, String, Boolean)
  fullName: Messenger.Core.Services.HttpDataService.GetAsync<T>(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: GetAsync
    path: Services/HttpDataService.cs
    startLine: 30
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<T> GetAsync<T>(string uri, string accessToken = null, bool forceRefresh = false)
    parameters:
    - id: uri
      type: System.String
    - id: accessToken
      type: System.String
    - id: forceRefresh
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function GetAsync(Of T)(uri As String, accessToken As String = Nothing, forceRefresh As Boolean = False) As Task(Of T)
  overload: Messenger.Core.Services.HttpDataService.GetAsync*
  nameWithType.vb: HttpDataService.GetAsync(Of T)(String, String, Boolean)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.HttpDataService.GetAsync(Of T)(System.String, System.String, System.Boolean)
  name.vb: GetAsync(Of T)(String, String, Boolean)
- uid: Messenger.Core.Services.HttpDataService.PostAsync``1(System.String,``0)
  commentId: M:Messenger.Core.Services.HttpDataService.PostAsync``1(System.String,``0)
  id: PostAsync``1(System.String,``0)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: PostAsync<T>(String, T)
  nameWithType: HttpDataService.PostAsync<T>(String, T)
  fullName: Messenger.Core.Services.HttpDataService.PostAsync<T>(System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: PostAsync
    path: Services/HttpDataService.cs
    startLine: 59
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> PostAsync<T>(string uri, T item)
    parameters:
    - id: uri
      type: System.String
    - id: item
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PostAsync(Of T)(uri As String, item As T) As Task(Of Boolean)
  overload: Messenger.Core.Services.HttpDataService.PostAsync*
  nameWithType.vb: HttpDataService.PostAsync(Of T)(String, T)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.HttpDataService.PostAsync(Of T)(System.String, T)
  name.vb: PostAsync(Of T)(String, T)
- uid: Messenger.Core.Services.HttpDataService.PostAsJsonAsync``1(System.String,``0)
  commentId: M:Messenger.Core.Services.HttpDataService.PostAsJsonAsync``1(System.String,``0)
  id: PostAsJsonAsync``1(System.String,``0)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: PostAsJsonAsync<T>(String, T)
  nameWithType: HttpDataService.PostAsJsonAsync<T>(String, T)
  fullName: Messenger.Core.Services.HttpDataService.PostAsJsonAsync<T>(System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: PostAsJsonAsync
    path: Services/HttpDataService.cs
    startLine: 75
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> PostAsJsonAsync<T>(string uri, T item)
    parameters:
    - id: uri
      type: System.String
    - id: item
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PostAsJsonAsync(Of T)(uri As String, item As T) As Task(Of Boolean)
  overload: Messenger.Core.Services.HttpDataService.PostAsJsonAsync*
  nameWithType.vb: HttpDataService.PostAsJsonAsync(Of T)(String, T)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.HttpDataService.PostAsJsonAsync(Of T)(System.String, T)
  name.vb: PostAsJsonAsync(Of T)(String, T)
- uid: Messenger.Core.Services.HttpDataService.PutAsync``1(System.String,``0)
  commentId: M:Messenger.Core.Services.HttpDataService.PutAsync``1(System.String,``0)
  id: PutAsync``1(System.String,``0)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: PutAsync<T>(String, T)
  nameWithType: HttpDataService.PutAsync<T>(String, T)
  fullName: Messenger.Core.Services.HttpDataService.PutAsync<T>(System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: PutAsync
    path: Services/HttpDataService.cs
    startLine: 89
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> PutAsync<T>(string uri, T item)
    parameters:
    - id: uri
      type: System.String
    - id: item
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PutAsync(Of T)(uri As String, item As T) As Task(Of Boolean)
  overload: Messenger.Core.Services.HttpDataService.PutAsync*
  nameWithType.vb: HttpDataService.PutAsync(Of T)(String, T)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.HttpDataService.PutAsync(Of T)(System.String, T)
  name.vb: PutAsync(Of T)(String, T)
- uid: Messenger.Core.Services.HttpDataService.PutAsJsonAsync``1(System.String,``0)
  commentId: M:Messenger.Core.Services.HttpDataService.PutAsJsonAsync``1(System.String,``0)
  id: PutAsJsonAsync``1(System.String,``0)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: PutAsJsonAsync<T>(String, T)
  nameWithType: HttpDataService.PutAsJsonAsync<T>(String, T)
  fullName: Messenger.Core.Services.HttpDataService.PutAsJsonAsync<T>(System.String, T)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: PutAsJsonAsync
    path: Services/HttpDataService.cs
    startLine: 105
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> PutAsJsonAsync<T>(string uri, T item)
    parameters:
    - id: uri
      type: System.String
    - id: item
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PutAsJsonAsync(Of T)(uri As String, item As T) As Task(Of Boolean)
  overload: Messenger.Core.Services.HttpDataService.PutAsJsonAsync*
  nameWithType.vb: HttpDataService.PutAsJsonAsync(Of T)(String, T)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Messenger.Core.Services.HttpDataService.PutAsJsonAsync(Of T)(System.String, T)
  name.vb: PutAsJsonAsync(Of T)(String, T)
- uid: Messenger.Core.Services.HttpDataService.DeleteAsync(System.String)
  commentId: M:Messenger.Core.Services.HttpDataService.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: Messenger.Core.Services.HttpDataService
  langs:
  - csharp
  - vb
  name: DeleteAsync(String)
  nameWithType: HttpDataService.DeleteAsync(String)
  fullName: Messenger.Core.Services.HttpDataService.DeleteAsync(System.String)
  type: Method
  source:
    remote:
      path: Messenger/Messenger.Core/Services/HttpDataService.cs
      branch: unstable
      repo: https://github.com/JonasMuehlmann/BIB_VPR.git
    id: DeleteAsync
    path: Services/HttpDataService.cs
    startLine: 119
  assemblies:
  - Messenger.Core
  namespace: Messenger.Core.Services
  syntax:
    content: public async Task<bool> DeleteAsync(string uri)
    parameters:
    - id: uri
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function DeleteAsync(uri As String) As Task(Of Boolean)
  overload: Messenger.Core.Services.HttpDataService.DeleteAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Messenger.Core.Services
  commentId: N:Messenger.Core.Services
  name: Messenger.Core.Services
  nameWithType: Messenger.Core.Services
  fullName: Messenger.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Messenger.Core.Services.HttpDataService.#ctor*
  commentId: Overload:Messenger.Core.Services.HttpDataService.#ctor
  name: HttpDataService
  nameWithType: HttpDataService.HttpDataService
  fullName: Messenger.Core.Services.HttpDataService.HttpDataService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Messenger.Core.Services.HttpDataService.GetAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.GetAsync
  name: GetAsync
  nameWithType: HttpDataService.GetAsync
  fullName: Messenger.Core.Services.HttpDataService.GetAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Messenger.Core.Services.HttpDataService.PostAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.PostAsync
  name: PostAsync
  nameWithType: HttpDataService.PostAsync
  fullName: Messenger.Core.Services.HttpDataService.PostAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Messenger.Core.Services.HttpDataService.PostAsJsonAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.PostAsJsonAsync
  name: PostAsJsonAsync
  nameWithType: HttpDataService.PostAsJsonAsync
  fullName: Messenger.Core.Services.HttpDataService.PostAsJsonAsync
- uid: Messenger.Core.Services.HttpDataService.PutAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.PutAsync
  name: PutAsync
  nameWithType: HttpDataService.PutAsync
  fullName: Messenger.Core.Services.HttpDataService.PutAsync
- uid: Messenger.Core.Services.HttpDataService.PutAsJsonAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.PutAsJsonAsync
  name: PutAsJsonAsync
  nameWithType: HttpDataService.PutAsJsonAsync
  fullName: Messenger.Core.Services.HttpDataService.PutAsJsonAsync
- uid: Messenger.Core.Services.HttpDataService.DeleteAsync*
  commentId: Overload:Messenger.Core.Services.HttpDataService.DeleteAsync
  name: DeleteAsync
  nameWithType: HttpDataService.DeleteAsync
  fullName: Messenger.Core.Services.HttpDataService.DeleteAsync
